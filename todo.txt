.- [v] new class MethodExpression
.- [_] rename class names 'StringExpression' to 'StringLiteral', 'BooleanExpression' to 'BooleanLiteral', ...
.- [_] Parser#initialize(input, property) => Parser#initialize(property)
.- [v] Converter#initialize(input, property) => Converter#initialize(property)
.- [v] regard <input>, <br>, <img>, <meta>, <hr> as empty tag
.- [x] create 'kwartz/default.rb' and 'kwartz/config.rb' and module Kwartz::Default'
.- [v] kwartz/config.rb
.- [_] kwartz/messages.rb
.- [v] kwartz/util/optparse.rb
.- [v] check_token()
.- [v] assert
.- [v] delete <span>
.- [_] is_instance_of()
.- [v] analyzer
.- [v] translator/php.rb
.- [_] translatro/ruby.rb
.- [v] translator/erb.rb
.- [v] translator/jstl10.rb
.- [v] translator/jstl11.rb
.- [_] translator/velocity.rb
.- [_] translator/pl.rb
.- [_] mkmethod
.- [v] macro C() S() D()
.- [v] eol auto-detect
.- [x] load statement
.- [_] include directive
.- [v] #DOCUMENT
.- [v] begin: {...} end: {...}
.- [v] require: "file1";
.- [v] jsp header
.- [_] --header, --footer
.- [_] auto-compile
.- [_] retrieve or extract (-r name)
.- [_] /* comment */
.- [_] parse type appropriately in 'vartype { type var; }'
.- [_] ruby gems
.- [_] load library path
.- [_] include file path
