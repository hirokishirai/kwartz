/**
 *  @(#) ScannerTest.java
 *  @Id  $Id$
 *  @copyright $Copyright$
 *  @release $Release$
 */
package kwartz;

import junit.framework.TestCase;

public class ScannerTest extends TestCase {

    private String _input;
    private String _expected;

    public Scanner _test() {
        return _test(true);
    }

    public Scanner _test(boolean flag_test) {
        if (! flag_test) return null;
        Scanner scanner = new Scanner(_input);
        StringBuffer sbuf = new StringBuffer();
        while (scanner.scan() != TokenType.EOF) {
            sbuf.append(TokenType.tokenName(scanner.getToken()));
            sbuf.append(' ');
            String s = TokenType.inspect(scanner.getToken(), scanner.getValue());
            sbuf.append(s);
            sbuf.append("\n");
        }
        String actual = sbuf.toString();
        assertEquals(_expected, actual);
        return scanner;
    }


    public void testScanner0() {  // basic test
        _input = "if while foo";
        _expected = "IF :if\nWHILE :while\nNAME foo\nEOF <<EOF>>\nEOF <<EOF>>\n";
        Scanner scanner = new Scanner(_input);
        StringBuffer sbuf = new StringBuffer();
        for (int i = 0; i < 5; i++) {
            scanner.scan();
            sbuf.append(TokenType.tokenName(scanner.getToken()));
            sbuf.append(' ');
            sbuf.append(TokenType.inspect(scanner.getToken(), scanner.getValue()));
            sbuf.append("\n");
        }
        String actual = sbuf.toString();
        assertEquals(_expected, actual);
    }



<% docs = context[:docs] %>
<% for doc in docs do %>
<%   raise "'name:' is not found." unless doc['name'] %>
<%   for key in ["input", "expected"] %>
<%     raise "'#{key}:' is not found (name=#{doc['name']})." unless doc[key] %>
<%   end %>
    // <%= doc['desc'] %>
    public void test<%= doc['name'] %>() {
        _input = <%= doc['input'].inspect %>;

        _expected = ""
<%   doc['expected'].each_line do |line| %>
            + <%= line.inspect %>
<%   end %>
            ;

<%   if doc['exception'] %>
        try {
            _test();
            fail("<%= doc['exception'] %> expected but not happened.");
        } catch (<%= doc['exception'] %> ex) {
            // OK
        }
<%   else %>
        _test();
<%   end %>
    }

<% end %>
}
