/**
 *  @(#) InterpreterTest.java
 *  @Id  $Id$
 *  @copyright $Copyright$
 *  @release $Release$
 */
package kwartz;

//import kwartz.Interpreter;
import junit.framework.TestCase;
//import junit.framework.TestSuite;

import java.util.*;

public class InterpreterTest extends TestCase {
    String _input;
    String _expected;
    Map _context = new HashMap();

    public void _test() {
        Interpreter interpreter = new Interpreter();
        interpreter.compile(_input);
        try {
            java.io.StringWriter writer = new java.io.StringWriter();
            interpreter.execute(_context, writer);
            String actual = writer.toString();
            assertEquals(_expected, actual);
        } catch (java.io.IOException ex) {
            ex.printStackTrace();
        }
        //StatementParser parser = new StatementParser();
        //BlockStatement block = parser.parse(_input);
        //try {
        //    java.io.StringWriter writer = new java.io.StringWriter();
        //    block.execute(_context, writer);
        //    String actual = writer.toString();
        //    assertEquals(_expected, actual);
        //}
        //catch (java.io.IOException ex) {
        //    ex.printStackTrace();
        //}
    }


<% docs = context[:docs] %>
<% for doc in docs do %>
<%   raise "'name:' is not found." unless doc['name'] %>
<%   for key in ["input", "expected", "context"] %>
<%     raise "'#{key}:' is not found (name=#{doc['name']})." unless doc[key] %>
<%   end %>
    // <%= doc['desc'] %>
    public void test<%= doc['name'] %>() {

        _input = ""
<%   doc['input'].each_line do |line| %>
            + <%= line.inspect %>
<%   end %>
            ;

        _expected = ""
<%   doc['expected'].each_line do |line| %>
            + <%= line.inspect %>
<%   end %>
            ;

<%= doc['context'].gsub(/^/, '        ') %>

        _test();
    }

<% end %>

}
