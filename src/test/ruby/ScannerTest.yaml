###
### $Release$
### $Rev$
###
---
name:  Scanner11
desc:  keywords
input: "  if while  foreach else\nelseif\t\nin  "
expected: |
  IF :if
  WHILE :while
  FOREACH :foreach
  ELSE :else
  ELSEIF :elseif
  IN :in
#
---
name:  Scanner12
desc:  keywords
input: "true false null nil empty"
expected: |
  TRUE true
  FALSE false
  NULL null
  NAME nil
  EMPTY empty
#
---
name:  Scanner13
desc:  integer, double
input: "100 3.14"
expected: |
  INTEGER 100
  DOUBLE 3.14
#
---
name:  Scanner14
desc:  lexcal exception
input: "100abc"
expected: |
exception*:
  java:  LexicalException
#
---
name:  Scanner15
desc:  lexcal exception
input: "3.14abc"
expected: |
exception*:
  java: LexicalException
#
---
name:  Scanner16
desc:  comment
input: "// foo\n123/* // \n*/456"
expected: |
  INTEGER 123
  INTEGER 456
#
---
name:  Scanner17
desc:  comment
input: "/* \n//"
expected: |
exception*:
  java: LexicalException
#
---
name:  Scanner18
desc:  'string'
input: "'str1'"
expected: |
  STRING "str1"
#
---
name:  Scanner19
desc:  'string'
input: "'\n\r\t\\ \\''"
expected: |
  STRING "\n\r\t\\ '"
#
---
name:  Scanner20
desc:  "string"
input: '"str"'
expected: |
  STRING "str"
---
name:  Scanner21
desc:  "string"
#input: "\"\\n\\r\\t\\'\\\"\""
#input: '"\n\r\t\'\"'
input: |-
  "\n\r\t'\""
expected: |
  STRING "\n\r\t'\""
#
---
name:  Scanner31
desc:  alithmetic op
input: "+ - * / % .+"
expected: |
  ADD +
  SUB -
  MUL *
  DIV /
  MOD %
  CONCAT .+
#
---
name:  Scanner32
desc:  assignment op
input: "= += -= *= /= %= .+="
expected: |
  ASSIGN =
  ADD_TO +=
  SUB_TO -=
  MUL_TO *=
  DIV_TO /=
  MOD_TO %=
  CONCAT_TO .+=
#
---
name:  Scanner33
desc:  comparable op
input: "== != < <= > >="
expected: |
  EQ ==
  NE !=
  LT <
  LE <=
  GT >
  GE >=
#
---
name:  Scanner34
desc:  logical op
input: "! && ||"
expected: |
  NOT !
  AND &&
  OR ||
#
---
name:  Scanner35
desc:  symbols
input: "[][::;?.,#"
expected: |
  L_BRACKET [
  R_BRACKET ]
  L_BRACKETCOLON [:
  COLON :
  SEMICOLON ;
  CONDITIONAL ?:
  PERIOD .
  COMMA ,
  SHARP #
#
---
name:  Scanner36
desc:  expand
input: "@stag"
expected: |
  EXPAND @stag
#
---
name:  Scanner41
desc:  raw expr
input: "s=<%= $foo %>;"
expected: |
  NAME s
  ASSIGN =
  RAWEXPR <%= $foo %>
  SEMICOLON ;
#
---
name:  Scanner42
desc:  raw stmt
input: "<% $foo %>"
expected: |
  RAWSTMT <% $foo %>
#
---
name:  Scanner51
desc:  invalid char
input: "~"
expected: |
exception*:
  java:  LexicalException
#
---
name:  Scanner52
desc:  invalid char
input: "^"
expected: |
exception*:
  java:  LexicalException
#
---
name:  Scanner53
desc:  invalid char
input: "$"
expected: |
exception*:
  java:  LexicalException
#
