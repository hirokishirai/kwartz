/**
 *  @(#) OptimizerTest.java
 *  @Id  $Id$
 *  @copyright $Copyright$
 *  @release $Release$
 */
package kwartz;

import kwartz.node.*;
import junit.framework.TestCase;
import java.util.*;

public class OptimizerTest extends TestCase {

    private String _pdata;
    private String _plogic;
    private String _compiled;
    private String _optimized;
    private boolean _print;

    private void _test() {
        // parse plogic
        DeclarationParser declParser = new DeclarationParser();
        List declList = declParser.parse(_plogic);

        // parse pdata
        Converter converter = new DefaultConverter();
        Statement[] stmts = converter.convert(_pdata);

        // create block statement
        BlockStatement blockStmt = new BlockStatement(stmts);

        // create element table
        List elemList = converter.getElementList();
        Map elementTable = Element.createElementTable(elemList);

        // merge declarations
        Element.mergeDeclarationList(elementTable, declList);

        // expand
        Expander expander = new DefaultExpander(elementTable);
        expander.expand(blockStmt, null);
        //if (flagPrint) System.out.println(blockStmt._inspect().toString());

        // assert
        String actual = blockStmt._inspect().toString();
        if (_print) {
            System.out.println(actual);
        } else {
            assertEquals(_compiled, actual);
        }

        // optimize
        Optimizer optimizer = new Optimizer();
        optimizer.optimize(blockStmt);

        // assert
        actual = blockStmt._inspect().toString();
        if (_print) {
            System.out.println(actual);
        } else {
            assertEquals(_optimized, actual);
        }
    }


<% docs = context[:docs] %>
<% for doc in docs do %>
<%   raise "'name:' is not found." unless doc['name'] %>
<%   for key in ["pdata", "plogic", "compiled", "optimized"] %>
<%     raise "'#{key}:' is not found (name=#{doc['name']})." unless doc[key] %>
<%   end %>
    // <%= doc['desc'] %>
    public void test<%= doc['name'].split(/_/).collect{|s| s.capitalize}.join('') %>() {

        _pdata = ""
<%    doc['pdata'].each_line do |line| %>
            + <%= line.inspect %>
<%    end %>
            ;

        _plogic = ""
<%    doc['plogic'].each_line do |line| %>
            + <%= line.inspect %>
<%    end %>
            ;

        _compiled = ""
<%    doc['compiled'].each_line do |line| %>
            + <%= line.inspect %>
<%    end %>
            ;

        _optimized = ""
<%    doc['optimized'].each_line do |line| %>
            + <%= line.inspect %>
<%    end %>
            ;

        _test();
    }

<% end %>
}
