/**
 *  @(#) CompilerTest.java
 *  @Id  $Id$
 *  @copyright $Copyright$
 *  @release $Release$
 */
package kwartz;

import junit.framework.TestCase;
import java.util.*;
import java.io.*;

public class CompilerTest extends TestCase {
    String _plogic;
    String _pdata;
    String _expected;
    Map    _context = new HashMap();
    Properties _props = new Properties(Configuration.defaults);

    private void _test() throws Exception {
        _test(false);
    }

    private void _test(boolean flagPrint) throws Exception {
        kwartz.Compiler compiler = new DefaultCompiler(_props);
        //compiler.addPresentationLogic(_plogic);
        //compiler.addPresentationData(_pdata);
        //BlockStatement stmt = compiler.getBlockStatement();
        Template template = compiler.compileString(_pdata, _plogic, null);
        Writer writer = new StringWriter();
        template.execute(_context, writer);
        String actual = writer.toString();
        writer.close();
        if (flagPrint)
            System.out.println(actual);
        else
            assertEquals(_expected, actual);
    }


<% docs = context[:docs] %>
<% for doc in docs do %>
<%   raise "name is not found." unless doc['name'] %>
<%   %w[desc pdata plogic expected context].each do |key| %>
<%     raise "'#{key}:' is not found (name=#{doc['name']})." unless doc[key] %>
<%   end %>
    // <%= doc['desc'] %>
    public void test<%= doc['name'].capitalize() %>() throws Exception {
        _pdata = ""
<%   doc['pdata'].each_line do |line| %>
            + <%= line.inspect %>
<%   end %>
            ;

        _plogic = ""
<%   doc['plogic'].each_line do |line| %>
            + <%= line.inspect %>
<%   end %>
            ;

        _expected = ""
<%   doc['expected'].each_line do |line| %>
            + <%= line.inspect %>
<%   end %>
            ;

<%=  doc['context'].gsub(/^/, '        ') %>

        _test();
    }
<%   if doc['helper'] %>
<%=    doc['helper'].gsub(/^/, '    ') %>
<%   end %>

<% end %>

}
