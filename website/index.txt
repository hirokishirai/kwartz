.=title:	Kwartz
.#.?author:	kwa(at)kuwata-lab.com
.#.?keywords:	kwartz,html,xml,template,Ruby,PHP,JSP,Velocity,eRuby,ERB,erbscan
.#.?stylesheet:	docstyle.css


.$ News

.* (2006-09-29)  {{<kwartz-ruby and kwartz-php 3.1.1|#Download>}} released
.* (2006-09-24)  {{<kwartz-ruby 3.1.0|#Download>}} released
.* (2006-06-01)  {{<kwartz-ruby 3.0.0|#Download>}} released
.* (2005-08-11)  {{<kwartz-java 0.0.1 (alpha release)|#Download>}} released
.* (2005-05-17)  {{<kwartz-ruby 2.0.4|#Download>}} released
.* (2005-01-10)  {{<kwartz-php 0.3.2|#Download>}} released


.$ Introduction

.+++++
<p></p>   <!-- avoid IE Bug -->
<table style="float:right; width:424px; margin:0px 0px 10px 10px" summary="">
 <tr>
  <td class="fig-capture">
  Fig1. Business layer and presentation layer have their own data and logic.
  </td>
 </tr>
 <tr>
  <td class="fig-body">
   <img src="img/fig02.png" alt="figure of kwartz"/>
  </td>
 </tr>
 <tr>
  <td class="fig-capture">
  Fig2. Kwartz vs. Other template system: Kwartz separates presentation logic from presentaion data(=HTML).
  </td>
 </tr>
 <tr>
  <td class="fig-body">
   <img src="img/fig03.png" alt="figure of kwartz"/>
  </td>
 </tr>
</table>
.+++++


Kwartz is a template system which realized the concept of
{{*'Independence of Presentation Logic'(IoPL)*}}.
.# or {{*'Separation of Presentation Logic and Presentaion data' (SoPL/PD)*}}.

It is available to separate the presentation layer from the
main program with any template system. In addition, Kwartz
enables you to separate the presentation logic (such as iteration or
conditional branching) from the presentation data (HTML file).

In a broad way, application can be divided into two layers: Business layer and
Presentation layer. These layers have their own data and logic.
It is important that presentation layer should have it's own logic and that
presentation logic should not be in business layer (Fig1).

Traditional template system, such as Jakarta Velocity or Smarty, forces you to mix
presentation logic and presentation data in a template, and breaks HTML design in the result.
Some other template system, such as Enhydra XMLC or amrita, doesn't break HTML design
but they mix presentation logic into business layer(=main program).
Kwartz divides template into presentation logic and presentation data.
Therefore Kwartz doesn't break HTML design at all and keep main program 'clean' (Fig2).

In addition, Kwartz has more features:
	.* Separates presentation logics from both business logics (= main program) and presentation data (= HTML file).
	.* Runs very fast
	.* Supports multiple programing languages: Ruby(eRuby), PHP, Java(JSP)
	.* Doesn't break HTML design at all
	.* Handle any text file
	.* Supports auto-sanitizing and partial-sanitizing

See {{<users' guide|kwartz3ruby-users-guide.html>}} for details.
.#See {{<Brief Overview|overview/index.cgi?page=1>}} for overview, or {{<Kwartz Users' Guide|kwartz3ruby-users-guide.html>}} for more detail.


.$ Download
	.* Download from {{<sourceforge.net|download.cgi>}}
	   .- Kwartz-ruby 3.1.1 (beta) (2006-09-29)
	   .- Kwartz-php 3.1.1 (beta) (2006-09-29) {{!(New!)!}}
	   .#.- kwartz-ruby 3.1.0 (beta) (2006-09-24)
	   .#.- kwartz-ruby 2.0.4 (stable)
	   .- Kwartz-java 0.0.1 (alpha)


.$ Installation
	.* Kwartz-ruby
	   .- Just type '{{,gem install --remote kwartz,}}'
	   .- Or download kwartz_X.X.X.tar.bz2 from {{<sourceforge|download.cgi>}}, expand it, and type '{{,ruby setup.rb,}}'.
	.* Kwartz-php
	   .- Download Kwartz-X.X.X.tgz from {{<sourceforge|download.cgi>}} and just type '{{,pear install Kwartz-X.X.X.tgz,}}'.



.$ Documents
	.* README           ({{<kwartz-ruby|kwartz3ruby-README.txt>}},
		             {{<kwartz-php|kwartz3php-README.txt>}})
	.* ChangeLog        ({{<kwartz-ruby|kwartz3ruby-ChangeLog>}},
			     {{<kwartz-php|kwartz3php-ChangeLog>}})
	.* Users' guide     ({{<kwartz-ruby|kwartz3ruby-users-guide.html>}},
			     {{<kwartz-php|kwartz3php-users-guide.html>}})
	.* Reference manual ({{<kwartz-ruby|kwartz3ruby-reference.html>}},
			     {{<kwartz-php|kwartz3php-reference.html>}})
	.* Pattern Catalog  ({{<kwartz-ruby|kwartz3ruby-pattern-catalog.html>}},
			     {{<kwartz-php|kwartz3php-pattern-catalog.html>}})
	.#.* {{<README.txt|kwartz3-ruby-README.txt>}}
	.#.* {{<Users' guide|kwartz3-users-guide.html>}}
	.#.* {{<Reference manual|kwartz3-reference.html>}}
	.#.* {{<Presentation pattern catalog|kwartz3-p-pattern.html>}}
	.#.* {{<Brief overview|overview/index.cgi?page=1>}}
	.#.* {{<Changelog|kwartz3-ChangeLog>}}


.$ License
	.* LGPL 2.1
	     
	   If you need looser license, please suggest me.
	     
	   Output scripts kwartz command generates are outside of the license.

.$ Author
	.* makoto kuwata <kwa(at)kuwata-lab.com>.^
	   (If you send me a mail, please make it's subject starting with '[Kwartz]'.
	    Otherwise, I may miss your mail.)

.$ Other
	.* {{<Bug reports|http://sourceforge.net/tracker/?group_id=127304&atid=708267>}} and
	   {{<enhance requests|http://sourceforge.net/tracker/?group_id=127304&atid=708270>}} are welcome.
	.* This project was subsidized by Exploratory Software Project of
	   {{<IPA|http://www.ipa.go.jp/about/english/index.html>}}
	   (Information-Technology Promotion Agency Japan).

.#.$ Special Thanks
.#	.* Shu-yu Guo - He corrected my English of documents.
.#	.* Andreas Schwarz - He gave me several good advices.
.#	.* Wesley J Landaker - He created a Debian package of Kwartz.
.#	Very thanks!
