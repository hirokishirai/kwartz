list = %w[border1 border2 border3 breadcrumbs calendar form1 thumbnail pagelayout ]

recipe  :all								do |r|
	list.each { |dir|
	    chdir dir do rook :all end
	}
	end

recipe :clear								do |r|
	list.each { |dir|
	    chdir dir do rook :clear end
	}
	end


recipe "build.xml"							do |r|
	list.each { |dir|
	    chdir dir do rook "build.xml" end
	}
	end


###

class File
  def self.edit(filename, &block)
    File.open(filename, 'r+') do |f|
      s = f.read()
      yield(s)
      f.rewind()
      f.truncate(0)
      f.write(s)
    end
  end
  
  def self.write(filename, s)
    File.open(filename, 'w') do |f|
      f.write(s)
    end
  end
end



confdef = <<END
- basename:   border1
  classname:  Border1
- basename:   border2
  classname:  Border2
- basename:   border3
  classname:  Border3
- basename:   breadcrumbs
  classname:  Breadcrumbs
- basename:   calendar
  classname:  CalendarExample
- basename:   form1
  classname:  Register
  argsuments: [ -username, Kwartz ]
- basename:   pagelayout
  classname:  PageLayout
- basename:   thumbnail
  classname:  Thumbnail
  no-output:  yes
END


require 'yaml'
conf = YAML.load(confdef)
#confs = {}
#doc.each do |item|
#  confs[item['name']] = item
#end


def eval_eruby(_erb, context)
  return _erb.result(binding())
end


desc  "generate */build.kwaff"
recipe :generate						do |r|
	# build.kwaff
	require 'erb'
	template = 'build.kwaff.eruby'
	trim_mode = '<>'
	erb = ERB.new(File.read(template), $SAFE, trim_mode)
	conf.each do |context|
	  result = eval_eruby(erb, context)
	  filename = "#{context['basename']}/build.kwaff"
	  File.write(filename, result)
	end
    end
