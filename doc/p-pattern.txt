.JA	.=title:	プレゼンテーションパターンカタログ
.EN	.=title:	Presentation Pattern Catalog
.	.?author:	Makoto Kuwata <kwa(at)kuwata-lab.com>
.	.?version:	$Rev$
.	.?release:	$Release$
.	.?lastupdate:	$Date$
.	.?stylesheet:	docstyle.css
.	
.	
.JA	●はじめに	| preface*
.EN	.$ Preface	| preface*
.	
.JA	Kwartzは、{{*「プレゼンテーションロジックとプレゼンテーションデータの分離」*}}という概念を実現したテンプレートシステムです。
.JA	プレゼンテーションロジックとプレゼンテーションデータを分離すると、HTMLデザインをまったく崩すことなく、複雑なプレゼンテーションロジックを利用することができます。
.EN	Kwartz is the template system which realized the concept of '{{*Separation of Presentation Logic and Presentation Data (SoPL/PD)*}}.'
.EN	SoPL/PD enables to use complex presentation logics without breaking HTML design at all.
.	
.	
.JA	またプレゼンテーションデータとプレゼンテーションロジックとをうまく分離するための、いくつかのパターンが存在します。
.JA	これらのパターンを「プレゼンテーションパターン」といいます。
.EN	There are several patterns which help you to separate presentation logic and presentation data well.
.EN	These patterns are called 'Presentation Patterns.'
.	
.	
.JA	このドキュメントでは、プレゼンテーションパターンを紹介します。
.EN	This document shows Presentation Patterns.
.	
.	
.JA	◎目次			| toc*
.EN	.$$ Table of Contents	| toc*
.	
.	.#.+toc:
.JA	.<<< p-pattern.ja.toc
.EN	.<<< p-pattern.en.toc
.	.#.-toc:
.	
.	
.JA	◎更新履歴		| changelog*
.EN	.$$ ChangeLog		| changelog*
.	
.	.: 2005-03-21
.JA		.- Kwartzディレクティブについての説明を追加
.JA		.- すべてのパターンにおいて「説明」「適用場面」「サンプルコード」「補足」の見出しを追加
.JA		.- 「Replace Element by Valueパターン」の補足を追加
.EN		.- add text for Kwartz directives.
.EN		.- add subsubsection title for all patterns.
.EN		.- add 'supplement' subsubsection for 'Replace Element by Value Pattern'.
.	.#.: 2005-02-19
.	.#	.- beta2 release
.	.#.: 2005-02-14
.	.#	.- beta1 release
.	
.	
.	
.JA	●置換			| replacement
.EN	.$ Replacement		| replacement
.	
.	
.JA	◎Replace Element by Valueパターン	| replace-elem-by-value
.EN	.$$ Replace Element by Value Pattern	| replace-elem-by-value
.	
.	
.JA	○説明					| replace-elem-by-value-desc
.EN	.$$$ Description			| replace-elem-by-value-desc
.	
.JA	エレメントを、変数や式の値で置き換えることができます。
.JA	これを「Replace Element by Valueパターン」といいます。
.EN	You can replace the element with the value of a variable or an expression.
.EN	This is named 'Replace Element by Value Pattern.'
.	
.	
.JA	○適用場面					| replace-elem-by-value-situation
.EN	.$$$ Situation				| replace-elem-by-value-situation
.	
.JA	このパターンは、テキスト中に変数や式の値を出力するときに便利です。
.EN	This pattern is very useful to print out the value of a variable or an expression as text.
.	
.	
.JA	○サンプルコード			| replace-elem-by-value-example
.EN	.$$$ Example Code			| replace-elem-by-value-example
.	
.JA	プレゼンテーションデータ：
.EN	Presentation Data:
.	.-------------------- teq-replace1.pdata
.	Hello <span {{*id="mark:user"*}}>World</span>!
.	.--------------------
.	
.JA	プレゼンテーションロジック：
.EN	Presentation Logic:
.	.-------------------- teq-replace1.plogic
.	#user {
.	  plogic: {
.JA	    {{*print(username);*}}  // エレメントのかわりに変数usernameを出力する
.EN	    {{*print(username);*}}  // print value of variable 'username' instead of the element
.	  }
.	}
.	.--------------------
.	
.JA	出力用スクリプト：
.EN	Output Script:
.	.--------------------
.	.<<<:! ./output.rb -p guide.d/teq-replace1.plogic guide.d/teq-replace1.pdata
.	.--------------------
.	
.	
.JA	○補足					| replace-elem-by-value-suppliment
.EN	.$$$ Supplement				| replace-elem-by-value-suppliment
.	
.JA	値がnullまたは空文字列のときに、コンテンツテキストをデフォルト値として出力したい場合は次のようにします。
.JA	これは「Replace Element by Valueパターン」と「Delete Tagパターン」の組み合わせです。
.EN	The following is an example to print content text as default value when value is null or empty.
.EN	This examples is an combination of 'Replace Element by Value Pattern' and 'Delete Tag Pattern'.
.	
.JA	プレゼンテーションロジック：
.EN	Presentation Logic:
.	.-------------------- teq-replace2b.plogic
.	#user {
.	  plogic: {
.JA	    // 変数usernameの値を出力する。
.JA	    // 値がnullまたは空文字列なら 'guest' と出力する。
.EN	    // Print out value of variable 'username'.
.EN	    // Print 'guest' as a default value when 'username' is null or empty string.
.	    if (username == empty) {
.JA	      {{*@cont;*}}           // コンテンツテキストを出力する
.EN	      {{*@cont;*}}           // print out content text
.	    } else {
.JA	      {{*print(username);*}} // 変数の値を出力する
.EN	      {{*print(username);*}} // print out value of variable
.	    }
.	  }
.	}
.	.--------------------
.	
.	
.	
.	
.JA	◎Replace Content by Valueパターン	| replace-cont-by-value
.EN	.$$ Replace Content by Value Pattern	| replace-cont-by-value
.	
.	
.JA	○説明					| replace-cont-by-value-desc
.EN	.$$$ Description			| replace-cont-by-value-desc
.	
.JA	タグは残したままエレメントの内容だけを式の値で置き換えることができます。
.JA	これを「Replace Content by Valueパターン」といいます。
.EN	You can also replace only the content of the element in the same way.
.EN	This is named 'Replace Content by Value Pattern.'
.	
.	
.JA	○適用場面					| replace-cont-by-value-situation
.EN	.$$$ Situation				| replace-cont-by-value-situation
.	
.JA	エレメントの内容を式の値で置き換える場面は非常に多いため、このパターンはよく使われます。
.EN	This pattern is used frequently because the situation to replace the content by value is very popular.
.	
.	
.JA	○サンプルコード			| replace-cont-by-value-example
.EN	.$$$ Example Code			| replace-cont-by-value-example
.	
.JA	プレゼンテーションデータ：
.EN	Presentation Data:
.	.-------------------- teq-replace2.pdata
.	<h1 {{*id="mark:title"*}}>Example</h1>
.	.--------------------
.	
.JA	プレゼンテーションロジック：
.EN	Presentation Logic:
.	.-------------------- teq-replace2.plogic
.	#title {
.	  plogic: {
.	    @stag;
.JA	    {{*print(title);*}}  // 内容(@cont)のかわりに変数titleの値を出力する
.EN	    {{*print(title);*}}  // print value of a variable 'title' instead of content
.	    @etag;
.	  }
.	}
.	.--------------------
.	
.JA	出力用スクリプト：
.EN	Output Script:
.	.--------------------
.	.<<<:! ./output.rb -p guide.d/teq-replace2.plogic guide.d/teq-replace2.pdata
.	.--------------------
.	
.	
.JA	○補足					| replace-elem-by-value-suppliment
.EN	.$$$ Supplement				| replace-elem-by-value-suppliment
.	
.JA	「Replace Content by Valueパターン」は、Kwartzでは次のように書くことができます。
.EN	The 'Replace Content by Value Pattern' is to be described as the following in Kwartz.
.	
.JA	プレゼンテーションロジック：
.EN	Presentation Logic:
.	.--------------------
.	#title {
.JA	  {{*value: title;*}}  // 内容のかわりに変数titleの値を出力する
.EN	  {{*value: title;*}}  // print value of a variable 'title' instead of content
.	}
.	.--------------------
.	
.JA	またディレクティブ「{{,id="value:{{/expression/}}",}}」を使うと、
.JA	プレゼンテーションデータファイルだけでパターンを使用できます。
.EN	Kwartz Directive '{{,id="value:{{/expression/}}",}}' lets you to use this pattern without presentation logic file.
.	
.JA	プレゼンテーションデータ：
.EN	Presentation Data:
.	.-------------------- teq-replace2b.pdata
.	<h1 {{*id="value:title"*}}>Example</h1>
.	.--------------------
.	
.	
.	
.	
.JA	◎Replace Element by Elementパターン	| replace-elem-by-elem
.EN	.$$ Replace Element by Element Pattern	| replace-elem-by-elem
.	
.	
.JA	○説明					| replace-elem-by-elem-desc
.EN	.$$$ Description			| replace-elem-by-elem-desc
.	
.JA	エレメントを別のエレメントに交換することができます。
.JA	これは「Replace Element by Elementパターン」といいます。
.EN	You can replace the element by other element.
.EN	This pattern is named 'Replace Element by Element Pattern.'
.	
.	
.JA	○適用場面					| replace-elem-by-elem-situation
.EN	.$$$ Situation				| replace-elem-by-elem-situation
.	
.JA	このパターンは、ある場所で定義したエレメントを別の場所で再使用するのに便利です。
.EN	This pattern is very useful to reuse the element in other place.
.	
.	
.JA	○サンプルコード			| replace-elem-by-elem-example
.EN	.$$$ Example Code			| replace-elem-by-elem-example
.	
.JA	プレゼンテーションデータ：
.EN	Presentation Data:
.	.-------------------- replace-elem-by-elem.pdata
.	<div {{*id="mark:links"*}}>
.	 <a href="/">HOME</a> | <a href="/doc">Document</a> | <a href="/faq">FAQ</a>
.	</div>
.	
.	<p>Welcome to my Home Page!</p>
.	
.	<div {{*id="mark:links2"*}}>
.	  Home | Document | FAQ
.	</div>
.	.--------------------
.	
.	
.JA	プレゼンテーションロジック：
.EN	Presentation Logic:
.	.-------------------- replace-elem-by-elem.plogic
.	#links2 {
.	  plogic: {
.JA	    {{*@element(links);*}}  // エレメントlins2をエレメントlinksで置き換える
.EN	    {{*@element(links);*}}  // replace the element 'links2' by the element 'links'
.	  }
.	}
.	.--------------------
.	
.	
.JA	ここで「{{,@element({{/name/}}),}}」は、「{{,id="mark:{{/name/}}",}}」や「{{,id="{{/name/}}",}}」でマーキングされたエレメントを表しています。
.EN	{{,@element({{/name/}}),}} represents the element which is marked by {{,id="mark:{{/name/}}",}} or {{,id="{{/name/}}",}}.
.	
.	
.JA	出力用スクリプト：
.EN	Output Script:
.	.--------------------
.	.<<<:! kwartz -p guide.d/replace-elem-by-elem.plogic guide.d/replace-elem-by-elem.pdata
.	.--------------------
.	
.	
.JA	○補足					| replace-elem-by-elem-supplement
.EN	.$$$ Supplement				| replace-elem-by-elem-supplement
.	
.JA	Kwartzでは、ディレクティブ「{{,id="replace:{{/name/}}",}}」を使うと、
.JA	プレゼンテーションロジックファイルなしでこのパターンが使用できます。
.EN	Directive '{{,id="replace:{{/name/}}",}}' lets you to use this pattern without presentation logic file.
.	.--------------------
.	<div {{*id="mark:links"*}}>
.	 <a href="/">HOME</a> | <a href="/doc">Document</a> | <a href="/faq">FAQ</a>
.	</div>
.	
.	<p>Welcome to my Home Page!</p>
.	
.	<div {{*id="replace:links"*}}>
.	  Home | Document | FAQ
.	</div>
.	.--------------------
.	
.JA	またコマンドラインオプション「{{,-i {{/file/}},{{/file2/}},...,}}」を指定すると、
.JA	他のファイルのエレメントを利用できます。
.EN	The command-line option '{{,-i {{/file/}},{{/file2/}},...,}}' enables you to use elements
.EN	which are described in other files.
.	
.JA	プレゼンテーションデータ(links.html)：
.EN	Presentation Data(links.html):
.	.-------------------- links.html
.	<div {{*id="mark:links"*}}>
.	 <a href="/">HOME</a> | <a href="/doc">Document</a> | <a href="/faq">FAQ</a>
.	</div>
.	.--------------------
.	
.JA	プレゼンテーションデータ(page.html)：
.EN	Presentation Data(page.html):
.	.-------------------- page.html
.	<div {{*id="mark:links1"*}}> Home | Document | FAQ </div>
.	
.	<p>Welcome to my Home Page!</p>
.	
.	<div {{*id="mark:links2"*}}> Home | Document | FAQ </div>
.	.--------------------
.	
.JA	プレゼンテーションロジック(page.plogic)：
.EN	Presentation Logic(page.plogic):
.	.-------------------- page.plogic
.	#links1 {
.	  plogic: {
.	    {{*@element(links);*}}
.	  }
.	}
.	#links2 {
.	  plogic: {
.	    {{*@element(links);*}}
.	  }
.	}
.	.--------------------
.	
.JA	コンパイル：
.EN	Compile:
.	.====================
.	$ kwartz -l eruby {{*-i links.html*}} -p page.plogic page.html
.	.====================
.	
.JA	出力用スクリプト：
.EN	Output Script:
.	.--------------------
.	.<<<:! kwartz -i guide.d/links.html -p guide.d/page.plogic guide.d/page.html
.	.--------------------
.	
.	
.	
.	
.JA	◎Replace Content by Elementパターン	| replace-cont-by-elem
.EN	.$$ Replace Content by Element Pattern	| replace-cont-by-elem
.	
.	
.JA	○説明					| replace-cont-by-elem-desc
.EN	.$$$ Description			| replace-cont-by-elem-desc
.	
.JA	エレメントの内容を、別のエレメントで置き換えることができます。
.JA	これは「Replace Content by Elementパターン」または「Placeholderパターン」といいます。
.EN	You can replace content of an element by other element.
.EN	This pattern is named 'Replace Content by Element Pattern' or 'Placeholder Pattern.'
.	
.	
.JA	○適用場面					| replace-cont-by-elem-situation
.EN	.$$$ Situation				| replace-cont-by-elem-situation
.	
.JA	.#このパターンは、他のファイルでマーキングされたエレメントを取り込むときに使用されます。
.JA	このパターンは、表示するコンテンツと、全体のレイアウトを別にした場合によく利用されます。
.EN	.#This pattern is very useful to import elements marked in other presentation data files.
.EN	This pattern is very useful to separate contents data and design layout into separate files.
.	
.	
.JA	○サンプルコード			| replace-cont-by-elem-example
.EN	.$$$ Example Code			| replace-cont-by-elem-example
.	
.JA	この例では、次のようなファイルを使用します。
.JA	.* contens.html, contents.plogic - 表示するコンテンツデータを表します。
.JA	.* layout.html, layout.plogic - 全体のレイアウトを表します。
.EN	The following example contains four files.
.EN	.* contents.html, contents.plogic - repsesents contents data.
.EN	.* layout.html, layout.plogic - represents desing layout.
.	
.JA	プレゼンテーションデータ(contents.html)：
.EN	Presentation Data(contents.html):
.	.-------------------- contents.html
.	<html>
.	  <body>
.	    
.	    <p>menu:</p>
.	    <ul {{*id="mark:menu"*}}>
.	      <li><a href="..." {{*id="mark:menu_item"*}}>menu1</a></li>
.	    </ul>
.	
.	    <p>article:</p>
.	    <div {{*id="mark:article"*}}>
.	      <h2>What is Kwartz?</h2>
.	      <p>Kwartz is a template system, which realized the
.	         concept <strong>`Separation of Presentation Logic
.	         and Presentation Data'(SoPL/PD)</strong>.
.	      </p>
.	    </div>
.	    
.	  </body>
.	</html>
.	.--------------------
.	
.JA	プレゼンテーションロジック(contents.plogic)：
.EN	Presentation Logic(contents.plogic):
.	.-------------------- contents.plogic
.	#menu {
.	  plogic: {
.	    @stag;
.	    foreach (item in menu_list) {
.	      @cont;
.	    }
.	    @etag;
.	  }
.	}
.	
.	#menu_item {
.	  value: item['name'];
.	  attr:  "href" item['url'];
.	}
.	.--------------------
.	
.JA	プレゼンテーションデータ(layout.html)：
.EN	Presentation Data(layout.html):
.	.-------------------- layout.html
.	<!doctype html public "-//W3C//DTD HTML 4.01 Transitional//EN">
.	<html lang="en">
.	  <head>
.	    <title id="value:title">...title...</title>
.	    <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
.	    <link rel="stylesheet" type="text/css" href="design.css">
.	  </head>
.	  <body>
.	
.	    <table border="0">
.	      <tr>
.	        
.	        <!-- menu part -->
.	        <td width="100" valign="top">
.	          <div class="menu" {{*id="mark:placeholder_menu"*}}>
.	            <ul>
.	              <li>menu1</li>
.	              <li>menu2</li>
.	              <li>menu3</li>
.	            </ul>
.	          </div>
.	        </td>
.	        
.	        <!-- article part -->
.	        <td width="400" valign="top">
.	          <div class="article" {{*id="mark:placeholder_article"*}}>
.	            aaa<br>
.	            bbb<br>
.	            ccc<br>
.	            ddd<br>
.	          </div>
.	        </td>
.	        
.	      </tr>
.	
.	      <!-- footer part -->
.	      <tr>
.	        <td colspan="2" class="copyright">
.	          copyright&copy; 2004-2005 kuwata-lab.com All Rights Reserverd
.	        </td>
.	      </tr>
.	    </table>
.	    
.	  </body>
.	</html>
.	.--------------------
.	
.JA	プレゼンテーションロジック(layout.plogic)：
.EN	Presentation Logic(layout.plogic):
.	.-------------------- layout.plogic
.	#placeholder_menu {
.	  plogic: {
.	    @stag;
.JA	    {{*@element(menu);*}}   // 内容を別のエレメントで置き換える
.EN	    {{*@element(menu);*}}   // replace content by other element
.	    @etag;
.	 }
.	}
.	
.	#placeholder_article {
.	  plogic: {
.	    @stag;
.JA	    {{*@element(article);*}}   // 内容を別のエレメントで置き換える
.EN	    {{*@element(article);*}}   // replace content by other element
.	    @etag;
.	  }
.	}
.	.--------------------
.	
.JA	コンパイルするときには他のファイルのエレメントを読み込むために、
.JA	コマンドオプション「{{,-i {{/file1,file2,.../}},}}」を指定します。
.EN	Compilation requires the command-line option {{,-i {{/file1,file2,.../}},}}
.EN	which enables to import elements defined in other files.
.	
.JA	コンパイル：
.EN	Compile:
.	.====================
.	$ kwartz -l eruby  {{*-i contents.html*}} -p contens.plogic,layout.plogic layout.html
.	.#$ kwartz -l php    {{*-i contents.html*}} -p contens.plogic,layout.plogic layout.html
.	.#$ kwartz -l jstl11 {{*-i contents.html*}} -p contens.plogic,layout.plogic layout.html
.	.====================
.	
.JA	出力用スクリプト：
.EN	Output Script:
.	.--------------------
.	.<<<:! kwartz -i guide.d/contents.html -p guide.d/contents.plogic,guide.d/layout.plogic guide.d/layout.html
.	.--------------------
.	
.	
.JA	○補足					| replace-cont-by-elem-supplement
.EN	.$$$ Supplement				| replace-cont-by-elem-supplement
.	
.JA	Kwartzでは、ディレクティブ「{{,id="placeholder:{{/name/}}",}}」を使うと、
.JA	プレゼンテーションロジックファイル(layout.plogic)なしでこのパターンが使用できます。
.EN	Kwartz Directive '{{,id="placeholder:{{/name/}}",}}' lets you to use this pattern without presentation logic file(layout.plogic).
.	
.JA	プレゼンテーションデータ(layout.html)：
.EN	Presentation Data(layout.html):
.	.--------------------
.	             :
.	             :
.	        <!-- menu part -->
.	        <td width="100" valign="top">
.	          <div class="menu" {{*id="placeholder:menu"*}}>
.	            <ul>
.	              <li>menu1</li>
.	              <li>menu2</li>
.	              <li>menu3</li>
.	            </ul>
.	          </div>
.	        </td>
.	        
.	        <!-- article part -->
.	        <td width="400" valign="top">
.	          <div class="article" {{*id="placeholder:article"*}}>
.	            aaa<br>
.	            bbb<br>
.	            ccc<br>
.	            ddd<br>
.	          </div>
.	        </td>
.	             :
.	             :
.	.--------------------
.	
.	
.	
.	
.JA	●削除		| deletion
.EN	.$ Deletion	| deletion
.	
.	
.JA	◎Delete Elementパターン	| delete-elem
.EN	.$$ Delete Element Pattern	| delete-elem
.	
.	
.JA	○説明					| delete-elem-desc
.EN	.$$$ Description			| delete-elem-desc
.	
.JA	プレゼンテーションロジックの定義を空欄にすると、エレメント全体を出力しないことになります。
.JA	これは「Delete Elementパターン」または「Dummy Elementパターン」といいます。
.EN	If presentation logic is empty, the element is not printed out.
.EN	This pattern is named 'Delete Element Pattern' or 'Dummy Element Pattern.'
.	
.	
.JA	○適用場面					| delete-elem-situation
.EN	.$$$ Situation				| delete-elem-situation
.	
.JA	このパターンは、プレゼンテーションデータにダミーデータを含めるときに使用します。
.EN	This pattern enables you to use dummy data in presentation data.
.	
.	
.JA	○サンプルコード			| delete-elem-example
.EN	.$$$ Example Code			| delete-elem-example
.	
.JA	プレゼンテーションデータ：
.EN	Presentation Data:
.	.-------------------- dummy-elem.pdata
.	<ul>
.	  <li>foo</li>
.	  <li {{*id="dummy"*}}>bar</li>
.	</ul>
.	.--------------------
.	
.JA	プレゼンテーションロジック：
.EN	Presentation Logic:
.	.-------------------- dummy-elem.plogic
.	#dummy {
.	  plogic: {
.	    // empty
.	  }
.	}
.	.--------------------
.	
.JA	出力用スクリプト：
.EN	Output Script:
.	.--------------------
.	.<<<:! ./output.rb -p guide.d/dummy-elem.plogic guide.d/dummy-elem.pdata
.	.--------------------
.	
.	
.JA	○補足					| delete-elem-supplement
.EN	.$$$ Supplement				| delete-elem-supplement
.	
.JA	Kwartzではディレクティブ「{{,id="dummy:{{/str/}}",}}」を使うことで、
.JA	プレゼンテーションロジックファイルなしでこのパターンを使用できます。
.EN	Kwartz directive '{{,id="dummy:{{/str/}}",}}' lets you to use this pattern without presentation logic file.
.	
.JA	プレゼンテーションデータ：
.EN	Presentation Data:
.	.--------------------
.	<ul>
.	  <li>foo</li>
.	  <li {{*id="dummy:d1"*}}>bar</li>
.	</ul>
.	.--------------------
.	
.	
.	
.	
.JA	◎Delete Tagパターン		| delete-tag
.EN	.$$ Delete Tag Pattern		| delete-tag
.	
.	
.JA	○説明					| delete-tag-desc
.EN	.$$$ Description			| delete-tag-desc
.	
.JA	プレゼンテーションロジックの定義において、「{{,@cont,}}」だけを使用し、
.JA	「{{,@stag,}}」と「{{,@stag,}}」を使わないようにすると、エレメントのタグを削除できます。
.JA	これは「Delete Tagパターン」または「Dummy Tagパターン」といいます。
.EN	If you use only {{,@cont,}} and don't use {{,@stag,}} and {{,@cont,}},
.EN	you can remove start and end tags of the element.
.EN	This pattern is named 'Delete Tag Pattern' or 'Dummy Tag Pattern.'
.	
.	
.JA	○適用場面					| delete-tag-situation
.EN	.$$$ Situation				| delete-tag-situation
.	
.JA	このパターンは、ある条件のときだけタグを出力したい場合に使います。
.EN	This pattern is very useful if you want to print tags according to condition.
.	
.	
.JA	○サンプルコード			| delete-tag-example
.EN	.$$$ Example Code			| delete-tag-example
.	
.JA	プレゼンテーションデータ：
.EN	Presentation Data:
.	.-------------------- dummy-tag.pdata
.	<a href="..." {{*id="mark:next"*}}>Next</a>
.	.--------------------
.	
.JA	プレゼンテーションロジック：
.EN	Presentation Logic:
.	.-------------------- dummy-tag.plogic
.	#next {
.	  attr: "href" url;
.	  plogic: {
.	    if (url == null) {
.JA	      {{*@cont;*}}   // urlがnullのときはタグを出力しない
.EN	      {{*@cont;*}}   // don't print tags when url is null
.	    } else {
.	      @stag;
.	      @cont;
.	      @etag;
.	    }
.	  }
.	}
.	.--------------------
.	
.JA	出力用スクリプト：
.EN	Output Script:
.	.--------------------
.	.<<<:! ./output.rb -p guide.d/dummy-tag.plogic guide.d/dummy-tag.pdata
.	.--------------------
.	
.	
.	
.JA	●繰り返し	| iteration
.EN	.$ Iteration	| iteration
.	
.	
.JA	◎Iterate Elementパターン	| iterate-elem
.EN	.$$ Iterate Element Pattern	| iterate-elem
.	
.	
.JA	○説明					| iterate-elem-desc
.EN	.$$$ Description			| iterate-elem-desc
.	
.JA	繰り返しの中に「{{,@stag,}}」と「{{,@cont,}}」と「{{,@etag,}}」を含めると、エレメント全体を繰り返すことになります。
.JA	これを「Iterate Element」パターンといいます。
.EN	Iteration which contains {{,@stag,}}, {{,@cont,}}, and {{,@etag,}} represents to iterate the element.
.EN	This pattern is named 'Iterate Element' pattern.
.	
.	
.JA	○適用場面					| iterate-elem-situation
.EN	.$$$ Situation				| iterate-elem-situation
.	
.JA	リストの要素を出力する場面ならどこでも、このパターンが使用できます。
.EN	The situation is very popular which requres to print list items.
.EN	This pattern is very useful for all these situations.
.	
.	
.JA	○サンプルコード			| iterate-elem-example
.EN	.$$$ Example Code			| iterate-elem-example
.	
.JA	プレゼンテーションデータ：
.EN	Presentation Data:
.	.-------------------- iterate-elem.pdata
.	<table>
.	  <tr {{*id="mark:items"*}}>
.	   <td>@{item}@</td>
.	  </tr>
.	</table>
.	.--------------------
.	
.JA	プレゼンテーションロジック：
.EN	Presentation Logic:
.	.-------------------- iterate-elem.plogic
.	#items {
.	  plogic: {
.JA	    // 開始タグ、内容、終了タグを繰り返す
.EN	    // iterate start tag, content, and end tag
.	    {{*foreach (item in list) {*}}
.	      @stag;
.	      @cont;
.	      @etag;
.	    {{*}*}}
.	  }
.	}
.	.--------------------
.	
.JA	出力用スクリプト：
.EN	Output Script:
.	.--------------------
.	.<<<:! ./output.rb -p guide.d/iterate-elem.plogic guide.d/iterate-elem.pdata
.	.--------------------
.	
.	
.JA	○補足					| iterate-elem-supplement
.EN	.$$$ Supplement				| iterate-elem-supplement
.	
.JA	Kwartzではディレクティブ「{{,id="foreach:{{/item/}}={{/list/}}",}}」を使うことで、
.JA	プレゼンテーションロジックファイルなしでこのパターンを使用できます。
.EN	Kwartz directive {{,id="foreach:{{/item/}}={{/list/}}",}} lets you to use this pattern without presentation logic file.
.	
.JA	プレゼンテーションデータ：
.EN	Presentation Data:
.	.--------------------
.	<table>
.	  <tr {{*id="foreach:item=list"*}}>
.	   <td>@{item}@</td>
.	  </tr>
.	</table>
.	.--------------------
.	
.	
.	
.	
.JA	◎Iterate Contentパターン	| iterate-cont
.EN	.$$ Iterate Content Pattern	| iterate-cont
.	
.	
.JA	○説明					| iterate-cont-desc
.EN	.$$$ Description			| iterate-cont-desc
.	
.JA	繰り返しの中に「{{,@cont,}}」を含めると、内容だけを繰り返すことになります。
.JA	これを「Iterate Content」パターンといいます。
.EN	Iteration which contains only {{,@cont,}} represents to iterate the content.
.EN	This pattern is named 'Iterate Content' pattern.
.	
.	
.JA	○適用場面					| iterate-cont-situation
.EN	.$$$ Situation				| iterate-cont-situation
.	
.JA	これは<dl></dl>の内容だけを繰り返したいときや、テーブルにおいて複数の行を繰り返したい場合に、特に有効です。
.EN	This pattern is very useful when creating <dl></dl> list or table which repeats several rows.
.	
.	
.JA	○サンプルコード			| iterate-cont-example
.EN	.$$$ Example Code			| iterate-cont-example
.	
.JA	プレゼンテーションデータ：
.EN	Presentation Data:
.	.-------------------- iterate-elem.pdata
.	<ul {{*id="mark:items"*}}>
.	  <dt>@{item.text}@</dt>
.	  <dd>@{item.desc}@</dd>
.	</ul>
.	.--------------------
.	
.JA	プレゼンテーションロジック：
.EN	Presentation Logic:
.	.-------------------- iterate-elem.plogic
.	#items {
.	  plogic: {
.JA	    // 内容だけを繰り返す
.EN	    // iterate only content
.	    @stag;
.	    {{*foreach (item in list) {*}}
.	      @cont;
.	    {{*}*}}
.	    @etag;
.	  }
.	}
.	.--------------------
.	
.JA	出力用スクリプト：
.EN	Output Script:
.	.--------------------
.	.<<<:! ./output.rb -p guide.d/iterate-elem.plogic guide.d/iterate-elem.pdata
.	.--------------------
.	
.	
.JA	○補足					| iterate-cont-supplement
.EN	.$$$ Supplement				| iterate-cont-supplement
.	
.JA	Kwartzではディレクティブ「{{,id="loop:{{/item/}}={{/list/}}",}}」を使うことで、
.JA	プレゼンテーションロジックファイルなしでこのパターンを使用できます。
.EN	Kwartz directive {{,id="loop:{{/item/}}={{/list/}}",}} lets you to use this pattern without presentation logic file.
.	.--------------------
.	<ul {{*id="loop:item=list"*}}>
.	  <dt>@{item.text}@</dt>
.	  <dd>@{item.desc}@</dd>
.	</ul>
.	.--------------------
.	
.	
.	
.	
.JA	●選択		| selection
.EN	.$ Selection	| selection
.	
.	
.JA	◎Select Elementパターン	| select-elem
.EN	.$$ Select Element Pattern	| select-elem
.	
.	
.JA	○説明					| select-elem-desc
.EN	.$$$ Description			| select-elem-desc
.	
.JA	複数のエレメントからひとつだけを選んで出力する場合は、次のようにします。
.JA	これは「Select Elementパターン」といいます。
.EN	The following is an example to choose a certain element from some elements.
.EN	This pattern is named 'Select Element Pattern.'
.	
.	
.JA	○適用場面					| select-elem-situation
.EN	.$$$ Situation				| select-elem-situation
.	
.JA	このパターンは、条件に応じて内容を変更したい場合に特に有効です。
.EN	This pattern is very useful when you want to change data according to conditions.
.	
.	
.JA	○サンプルコード			| select-elem-example
.EN	.$$$ Example Code			| select-elem-example
.	
.JA	プレゼンテーションデータ：
.EN	Presentation Data:
.	.-------------------- select-elem.pdata
.	<div id="mark:message">
.	  <font color="red"   {{*id="mark:error"*}}>ERROR!</font>
.	  <font color="blue"  {{*id="mark:warning"*}}>Warning:</font>
.	  <font color="black" {{*id="mark:good"*}}>No error.</font>
.	</div>
.	.--------------------
.	
.JA	プレゼンテーションロジック：
.EN	Presentation Logic:
.	.-------------------- select-elem.plogic
.	#message {
.	  plogic: {
.	    if (status == 'error') {
.	      {{*@element(error);*}}      // ERROR!
.	    } else if (status == 'warning') {
.	      {{*@element(warning);*}}    // Warning:
.	    } else {
.	      {{*@element(good);*}}       // No error.
.	    }
.	  }
.	}
.	.--------------------
.	
.JA	出力用スクリプト：
.EN	Output Script:
.	.--------------------
.	.<<<:! ./output.rb -p guide.d/select-elem.plogic guide.d/select-elem.pdata
.	.--------------------
.	
.	
.JA	○補足					| select-elem-supplement
.EN	.$$$ Supplement				| select-elem-supplement
.	
.JA	Kwartzではディレクティブ「{{,id="if:{{/condition/}}",}}」「{{,id="elseif:{{/condition/}}",}}」「{{,id="else:",}}」を使うことで、
.JA	プレゼンテーションロジックファイルなしでこのパターンを使用できます。
.EN	Kwartz directive '{{,id="if:{{/condition/}}",}}', '{{,id="elseif:{{/condition/}}",}}', and '{{,id="else:",}}'
.EN	let you to use this pattern without presentation logic file.
.	
.JA	プレゼンテーションデータ：
.EN	Presentation Data:
.	.--------------------
.	<div>
.	  <font color="red"   {{*id="if:status=='error'"*}}>ERROR!</font>
.	  <font color="blue"  {{*id="elseif:status=='warning'"*}}>Warning:</font>
.	  <font color="black" {{*id="else"*}}>No error.</font>
.	</div>
.	.--------------------
.	
.	
.	
.	
.JA	◎Pick-up Elementパターン	| pickup-elem
.EN	.$$ Pick-up Element Pattern	| pickup-elem
.	
.	
.JA	○説明					| pickup-elem-desc
.EN	.$$$ Description			| pickup-elem-desc
.	
.JA	ある特定のエレメントだけを利用するには、利用したいエレメントだけをマーキングし、
.JA	プレゼンテーションロジックでそのエレメントだけを利用します。
.JA	利用されないエレメントは無視され、出力されません。
.JA	これは「Pick-up Elementパターン」といいます。
.EN	If you want to use certain elemnts, do marking the elements and use only them in presentation logic.
.EN	Elements which are not marked are ignored and not printed.
.EN	This pattern is named 'Pick-up Element Pattern.'
.	
.	
.JA	これは「Dummy Element」パターンと逆の考え方です。
.JA	「Dummy Element」パターンでは不要なエレメントをマーキングして削除することで必要なものだけを残しますが、
.JA	「Pick-up Element」パターンでは必要なエレメントだけマーキングして取り出すことで不要なものを削除します。
.EN	'Pick-up Element' pattern is opposite of 'Dummy Element' pattern.
.EN	In 'Dummy Element' pattern, dummy elements are marked and removed so that necessary elements are leaved.
.EN	In 'Pick-up Element' pattern, necessary elements are marked and leaved so that dummy elements are removed.
.	
.	
.JA	○適用場面					| pickup-elem-situation
.EN	.$$$ Situation				| pickup-elem-situation
.	
.JA	このパターンは、ダミーデータが多い場合に使われます。
.EN	This pattern is useful when many dummy datas are exist.
.	
.	
.JA	○サンプルコード			| pickup-elem-example
.EN	.$$$ Example Code			| pickup-elem-example
.	
.JA	プレゼンテーションデータ：
.EN	Presentation Data:
.	.-------------------- pickup-elem.pdata
.	<html>
.	  <body>
.	    <div {{*id="breadcrumbs"*}}>
.	      <a href="@{item['path']}@" {{*id="mark:crumb"*}}>@{item['name']}@</a>
.	      <span {{*id="mark:separator"*}}>&gt;</span>
.	      <a href="/aaa/">AAA</a> &lt;
.	      <a href="/aaa/bbb/">BBB</a> &lgt;
.	      <a href="/aaa/bbb/ccc">CCC</a> &lgt;
.	      <b {{*id="mark:title"*}}>@{title}@</b>
.	    </div>
.	  </body>
.	</html>
.	.--------------------
.	
.JA	プレゼンテーションロジック：
.EN	Presentation Logic:
.	.-------------------- pickup-elem.plogic
.	#breadcrumbs {
.	  plogic: {
.	    foreach (item in list) {
.	      {{*@element(crumb);*}}          // print <a>...</a>
.	      {{*@element(separator);*}}      // print '&gt;'
.	    }
.	    {{*@element(title);*}}            // print <b>title</b>
.	  }
.	}
.	.--------------------
.	
.JA	出力用スクリプト：
.EN	Output Script:
.	.--------------------
.	.<<<:! ./output.rb -p guide.d/pickup-elem.plogic guide.d/pickup-elem.pdata
.	.--------------------
.	
.	
.JA	この例では「{{,@{...}@,}}」を使用しましたが、これを使わないようにすると次のようになります。
.EN	The above example should be described as following.
.	
.JA	プレゼンテーションデータ：
.EN	Presentation Data:
.	.-------------------- pickup-elem.pdata
.	<html>
.	  <body>
.	    <div {{*id="breadcrumbs"*}}>
.	      <a href="/" {{*id="mark:crumb"*}}>Home</a>
.	      <span {{*id="mark:separator"*}}>&gt;</span>
.	      <a href="/aaa/">AAA</a> &lt;
.	      <a href="/aaa/bbb/">BBB</a> &lgt;
.	      <a href="/aaa/bbb/ccc">CCC</a> &lgt;
.	      <b {{*id="mark:title"*}}>Page Title</b>
.	    </div>
.	  </body>
.	</html>
.	.--------------------
.	
.JA	プレゼンテーションロジック：
.EN	Presentation Logic:
.	.-------------------- pickup-elem.plogic
.	#breadcrumbs {
.	  plogic: {
.	    foreach (item in list) {
.	      {{*@element(crumb);*}}          // print <a>...</a>
.	      {{*@element(separator);*}}      // print '&gt;'
.	    }
.	    {{*@element(title);*}}            // print <b>title</b>
.	  }
.	}
.	#crumb {
.	  value: item['name'];
.	  attr:  "href" item['path'];
.	}
.	#title {
.	  value: title;
.	}
.	.--------------------
.	
.	
.	
.	
.JA	◎Extract Elementパターン	| extract-elem
.EN	.$$ Extract Element Pattern	| extract-elem
.	
.	
.JA	○説明					| pickup-elem-desc
.EN	.$$$ Description			| pickup-elem-desc
.	
.JA	プレゼンテーションデータ全体から、ある特定のエレメントだけを抽出し、
.JA	ほかは一切表示しないようにすることができます。
.JA	このパターンは「Extract Elementパターン」といいます。
.EN	It is able to extract a certain element form the whole presentation data.
.EN	Other element and text strings are not printed.
.EN	This pattern is named 'Extract Element Pattern.'
.	
.	
.JA	○適用場面					| pickup-elem-situation
.EN	.$$$ Situation				| pickup-elem-situation
.	
.JA	このパターンを使うと、HTMLデータの一部だけを取り出し、部品化することができます。
.EN	This pattern is very useful to extract HTML fragments and make them libraries.
.	
.	
.JA	○サンプルコード			| pickup-elem-example
.EN	.$$$ Example Code			| pickup-elem-example
.	
.JA	次の例では、HTMLファイルからタブとメニューと著作権表示を抜き出しています。
.EN	The following is an example to extract the HTML fragments 'tablist', 'menulist', and 'copyright' and generates the output scripts for them.
.	
.	.#++++++
.JA	スタイルシート(design.css)：
.EN	Style Sheet (design.css):
.	.-------------------- design.css
.	.tabs a {
.		border-style: solid;
.		border-color: #006699;
.		border-width: 1px 1px 0px 1px;
.		color: #006699;
.		font-weight: bold;
.		text-decoration:none;
.		padding: 4px 10px 1px 10px;
.		margin: 0px 0px 0px 20px;
.	}
.	.tabs a.selected {
.		background-color:#006699;
.		color:#FFFFFF;
.	}
.	.tabs a:hover, .tabs a:active {
.		background-color: #CCEEFF;
.	}
.	.tabsline {
.		border-style:solit;
.		background-color:#006699;
.		padding:2px;
.		border-width:0;
.	}
.	.menus  {
.		border-style: solid;
.		border-color: #006699;
.		border-width: 1px 1px 1px 1px;
.		width:120;
.	}
.	.menus a {
.		color:#006699;
.		padding: 4px 10px 1px 10px;
.		text-decoration:none;
.	}
.	.menus a.selected {
.		font-weight:bold;
.	}
.	.menus a:hover, .menus a:active {
.		text-decoration:underline;
.	}
.	.menu_title {
.		color:#FFFFFF;
.		background-color:#006699;
.		font-weight:bold;
.		padding:3 10 2 10;
.		width:120;
.	}
.	.copyright {
.		font-size:small;
.		color:#999999;
.	}
.	.--------------------
.	.#------
.	
.JA	プレゼンテーションデータ({{<design.html>}})：
.EN	Presentation Data ({{<design.html>}}):
.	.-------------------- design.html
.	<html {{*id="mark:whole"*}}>
.	  <head>
.	    <title>Design Examples</title>
.	    <link rel="stylesheet" href="design.css" type="text/css">
.	  </head>
.	  <body>
.	
.	    <div {{*id="mark:tablist"*}}>
.	      <div class="tabs" id="mark:tabs">
.	        <a href="/" class="" {{*id="mark:tab"*}}>Home</a>
.	        <a href="/product/" class="selected">Product</a>
.	        <a href="/download/" class="">Download</a>
.	        <a href="/support/" class="">Support</a>
.	      </div>
.	      <div class="tabsline">
.	      </div>
.	    </div>
.	
.	    <br>
.	
.	    <div {{*id="mark:menulist"*}}>
.	      <span class="menu_title" id="value:menu_title">MenuList</span>
.	      <div class="menus" {{*id="mark:menus"*}}>
.	        <a href="/cgi-bin/email.cgi" class="" {{*id="mark:menu"*}}>E-Mail</a>
.	        <span {{*id="mark:menu_separator"*}}><br></span>
.	        <a href="/cgi-bin/board.cgi" class="selected">MesgBoard</a><br>
.	        <a href="/cgi-bin/photo.cgi" class="">PhotoAlbum</a><br>
.	        <a href="/cgi-bin/greeting.cgi" class="">GreetingCard</a><br>
.	      </div>
.	    </div>
.	    <br>
.	      
.	    <p> ..... </p>
.	    <p> ..... </p>
.	    <p> ..... </p>
.	    
.	    <div align="center" class="copyright" {{*id="mark:copyright"*}}>
.	      Copyright&copy; 2004-2005 kuwata-lab. All Rights Reserved.
.	    </div>
.	    
.	  </body>
.	</html>
.	.--------------------
.	
.	
.JA	プレゼンテーションロジック(copyright.plogic)：
.EN	Presentation Logic (copyright.plogic):
.	.-------------------- copyright.plogic
.	{{*#whole*}} {
.JA	  // 全体を表すエレメントwholeを、抽出したいエレメントで置き換える
.EN	  // replace the element 'whole' with the element you want to extract
.	  plogic: {
.	    {{*@element(copyright);*}}
.	  }
.	}
.	.--------------------
.	
.	
.JA	プレゼンテーションロジック(tablist.plogic)：
.EN	Presentation Logic (tablist.plogic):
.	.-------------------- tablist.plogic
.	{{*#whole*}} {
.JA	  // 全体を表すエレメントwholeを、抽出したいエレメントで置き換える
.EN	  // replace the element 'whole' with the element you want to extract
.	  plogic: {
.	    {{*@element(tablist);*}}
.	  }
.	}
.	
.	#tabs {
.	  plogic: {
.	    @stag;
.	    foreach (tab in tablist) {
.	      klass = current_tabname == tab['name'] ? 'selected' : '';
.	      @element(tab);
.	    }
.	    @etag;
.	  }
.	}
.	
.	#tab {
.	  value: tab['name'];
.	  attr:  "href" tab['href'], "class" klass;
.	}
.	.--------------------
.	
.	
.JA	プレゼンテーションロジック(menulist.plogic)：
.EN	Presentation Logic (menulist.plogic):
.	.-------------------- menulist.plogic
.	{{*#whole*}} {
.JA	  // 全体を表すエレメントwholeを、抽出したいエレメントで置き換える
.EN	  // replace the element 'whole' with the element you want to extract
.	  plogic: {
.	    {{*@element(menulist);*}}
.	  }
.	}
.	
.	#menus {
.	  plogic: {
.	    @stag;
.	    foreach (menu in menulist) {
.	      @element(menu);
.	      @element(menu_separator);
.	    }
.	    @etag;
.	  }
.	}
.	
.	#menu {
.	  value:  menu['name'];
.	.#  attr:   "href" menu['cgipath'] ,
.	.#          "class" current_menu == menu['name'] ? 'selected' : '';
.	  attr:   "href" menu['cgipath'], "class" klass;
.	  plogic: {
.	    klass = current_menu == menu['name'] ? 'selected' : '';
.	    @stag;
.	    @cont;
.	    @etag;
.	  }
.	}
.	.--------------------
.	
.	
.JA	コンパイル：
.EN	Compile:
.	.====================
.	### copyright
.	$ kwartz -l eruby -p copyright.plogic design.pdata
.	$ kwartz -l php   -p copyright.plogic design.pdata
.	
.	### tablist
.	$ kwartz -l eruby -p tablist.plogic   design.pdata
.	$ kwartz -l php   -p tablist.plogic   design.pdata
.	
.	### menulist
.	$ kwartz -l eruby -p menulist.plogic  design.pdata
.	$ kwartz -l php   -p menulist.plogic  design.pdata
.	.====================
.	
.	
.JA	出力用スクリプト：
.EN	Output Script:
.	.--------------------
.	.<<<:! ./output.rb -l eruby,php -p guide.d/copyright.plogic guide.d/design.html
.	.--------------------
.	
.JA	出力用スクリプト：
.EN	Output Script:
.	.--------------------
.	.<<<:! ./output.rb -l eruby,php -p guide.d/tablist.plogic guide.d/design.html
.	.--------------------
.	
.JA	出力用スクリプト：
.EN	Output Script:
.	.--------------------
.	.<<<:! ./output.rb -l eruby,php -p guide.d/menulist.plogic guide.d/design.html
.	.--------------------
.	
.	
.JA	○補足					| pickup-elem-supplement
.EN	.$$$ Supplement				| pickup-elem-supplement
.	
.JA	Kwartzでは、コマンドラインオプション「{{,--extract={{/name/}},}}」でも、{{,{{/name/}},}}でマーキングされたエレメントを抽出できます。
.EN	The command-line option {{,--extract={{/name/}},}} extracts the element marked with {{,{{/name/}},}} in Kwartz.
.	
