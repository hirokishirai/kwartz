###
### tagfile for kwaser (css version)
###
### $Id: html-css.ktag,v 0.41 2004-02-25 15:55:28+09 kwatch Exp kwatch $
###


### --------------------
### tag file
### --------------------
Kwaser::load_tagfile('html.ktag')
tagtable = Kwaser::TagTable.new('html-css')
tagtable.merge(Kwaser::TagTable.instance('html'))


### --------------------
### Document
### --------------------
begin_tag = Proc.new do |attrs, tagtable|
    attrs ||= {}
    context    = Kwaser::Context.current()
    title      = attrs['title']
    author     = attrs['author']
    lastupdate = attrs['lastupdate']
    author = lastupdate = nil if attrs['top_filename']
    keywords   = attrs['keywords']
    desc       = attrs['description'] || attrs['desc']
    charset    = attrs['charset'] || context[:charset]
    lang       = attrs['lang']    || context[:lang]
    stylesheet = attrs['stylesheet'] || context[:stylesheet] || 'html-css.css'
    #outer_header = $var['outer_header']
    #inner_header = $var['inner_header']
    s = ''
    s << "<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\n"
    s << "<html"
    s << " lang=\"#{lang}\"" if lang
    s << ">\n"
    s << "<head>\n"
    s << "  <meta http-equiv=\"Content-Type\" content=\"text/html"
    s << "; charset=#{charset}" if charset
    s << "\">\n"
    s << "  <title>#{title}</title>\n" if title
    s << "  <meta name=\"author\" content=\"#{author}\">\n"      if author
    s << "  <meta name=\"keywords\" content=\"#{keywords}\">\n"  if keywords
    s << "  <meta name=\"description\" content=\"#{desc}\">\n"   if desc
    s << "  <meta name=\"generator\" content=\"kwaser\">\n"
    s << "  <meta http-equiv=\"Content-Style-Type\" content=\"text/css\">\n"
    s << <<END
  <link rel="stylesheet" href="#{stylesheet}" type="text/css">
END
    s << " </head>\n"
    s << " <body>\n"
    s << "\n"
    #s << "  <!-- +OUTER_HEADER -->\n"    if outer_header
    #s << "#{outer_header}"               if outer_header
    #s << "  <!-- -OUTER_HEADER -->\n"    if outer_header
    #s << "\n"                            if outer_header

    s << "  <blockquote>\n"
    s << "   <div class=\"mainbody\">\n"
    s << "\n"

 if context[:folder] then
    s << "    <!-- breadcrumb -->\n"
  if File.basename($FILENAME) =~ /^index\./ then
    s << "    #{context[:folder].breadcrumb(true)}<br>\n"
  else
    arrow = context[:arrow] || Kwaser::Util::Folder.default(:arrow)
    s << "    #{context[:folder].breadcrumb()}#{arrow}#{attrs['title']}<br>\n"
  end
    s << "    <!-- /breadcrumb -->\n"
    s << "\n"
 end

    #s << "  <table border=\"0\" width=\"600\">\n"
    #s << "   <tr>\n"
    #s << "    <td>\n"

    s << "    <div align=\"left\"><h1>#{title}</h1></div>\n" if title
    s << "    <div align=\"left\">\n"             if author || lastupdate
    s << "      #{author}<br>\n"                  if author
    s << "      last update: #{lastupdate}<br>\n" if lastupdate
    s << "    </div>\n"                           if author || lastupdate
    s << "\n"                                     if author || lastupdate
    #s << "    <!-- +INNER_HEADER -->\n"   if inner_header
    #s << "#{inner_header}"                if inner_header
    #s << "    <!-- -INNER_HEADER -->\n"   if inner_header
    #s << "\n"                             if inner_header
    s
end
end_tag = Proc.new { |attrs, tagtable|
    attrs ||= {}
    prev_file  = attrs['prev_filename']
    next_file  = attrs['next_filename']
    top_file   = attrs['top_filename']
    #prev_title = attrs['prev_sectitle'] || attrs['prev_title']
    #next_title = attrs['next_sectitle'] || attrs['next_title']
    #top_title  = attrs['top_sectitle']  || attrs['top_title']
    flag_navi = (prev_file || next_file || top_file) ? true : false

    #inner_footer = $var['inner_footer']
    #outer_footer = $var['outer_footer']
    s = "\n"
    #s << "    <!-- +INNER_FOOTER -->\n" if inner_footer
    #s << "#{innter_footer}"             if inner_footer
    #s << "    <!-- -INNER_FOOTER -->\n" if inner_footer
    #s << "\n"                           if inner_footer
    s << "    <br>\n"						  if flag_navi
    s << "    <div align=\"center\">\n"				  if flag_navi
    s << "     <a href=\"#{prev_file}\">&lt;&lt;Prev</a>&nbsp;\n" if prev_file
    s << "     <a href=\"#{top_file}\">Top</a>&nbsp;\n"		  if top_file
    s << "     <a href=\"#{next_file}\">Next&gt;&gt;</a>\n"	  if next_file
    s << "    </div>\n"						  if flag_navi
    s << "\n"							  if flag_navi

    #s << "    </td>\n"
    #s << "   </tr>\n"
    #s << "  </table>\n"
    s << "   </div>\n"
    s << "  </blockquote>\n"

    s << "\n"
    #s << "  <!-- +OUTER_FOOTER -->\n"   if outer_footer
    #s << "#{outer_footer}"              if outer_footer
    #s << "  <!-- -OUTER_FOOTER -->\n"   if outer_footer
    #s << "\n"                           if outer_footer
    s << " </body>\n"
    s << "</html>\n"
    s
}
tagtable.regist(Kwaser::Document, begin_tag, end_tag)


### --------------------
### Section
### --------------------
def _proc_section(classname, tag)
    str = <<END
Proc.new { |attrs, tagtable|
    attrs ||= {}
    label  = attrs['label']
    title  = attrs['title']
    secnum = attrs['secnum']
    secnum_flag = Kwaser::Context.current.get(:secnum_flag)
    if !secnum_flag || !secnum || attrs['secnum_no_print'] then
	secnum_str = ''
    elsif format = Kwaser::Context.current.get(:#{classname}_format) then
	secnum_str = sprintf(format, secnum)
    else
	secnum_str = "\#{secnum} &nbsp; "
    end
    s = ""
    s << "<a name=\\"\#{label}\\"></a>\\n"
    s << "<#{tag} class=\\"#{classname}\\">\#{secnum_str}\#{title}</#{tag}>\\n"
    s
}
END
    eval str
end

begin_tag	= _proc_section('section1', 'h2')
end_tag		= "<br>\n\n\n"
tagtable.regist(Kwaser::Section1, begin_tag, end_tag)

begin_tag	= _proc_section('section2', 'h3')
end_tag		= "<br>\n\n\n"
tagtable.regist(Kwaser::Section2, begin_tag, end_tag)

begin_tag	= _proc_section('section3', 'h4')
end_tag		= "<br>\n\n"
tagtable.regist(Kwaser::Section3, begin_tag, end_tag)

begin_tag	= _proc_section('section4', 'h5')
end_tag		= "<br>\n\n"
tagtable.regist(Kwaser::Section4, begin_tag, end_tag)

begin_tag	= _proc_section('section4', 'h5')
end_tag		= "<br>\n\n"
tagtable.regist(Kwaser::Section5, begin_tag, end_tag)


### --------------------
### Preformatted
### --------------------
str = <<'END'
Proc.new do |attrs, tagtable|
    if !attrs then
	"<pre class=\"@@@\">"
    else
	label    = attrs['label']
	filename = attrs['filename'] || attrs['file']
	caption  = attrs['caption']
	s = ''
	s << "<a name=\"#{label}\"></a>\n"     if label
	s << "<div class=\"@@@_caption\">\n"   if filename || caption
	s << "#{filename}:\n"                  if filename
	s << "#{caption}"		       if caption
	s << "</div>\n"                        if filename || caption
	s << "<pre class=\"@@@\">"
	s
    end
end
END

pre1beg = eval str.gsub(/@@@/, 'program')
pre1end	= "</pre>\n"
pre2beg = eval str.gsub(/@@@/, 'terminal')
pre2end	= "</pre>\n"
pre3beg = eval str.gsub(/@@@/, 'output')
pre3end	= "</pre>\n"

tagtable.regist(Kwaser::Preformatted1, pre1beg,  pre1end)
tagtable.regist(Kwaser::Preformatted2, pre2beg,  pre2end)
tagtable.regist(Kwaser::Preformatted3, pre3beg,  pre3end)


### --------------------
### Table
### --------------------
def _proc_table(classname, align=nil)
    str = '
    Proc.new { |attrs, tagtable|
        if attrs then
	    label = attrs["label"]
	    summary = attrs["caption"]
        else
	    label = summary = nil
        end
	s = ""
	s << "<a name=\"#{label}\"></a>\n"    if label
    '
    str << ('    s << "<div align=\"' + align + '\">\n"' + "\n") if align
    str << '
	s << "<table class=\"' + classname + '\" border=\"1\" cellspacing=\"0\""
	s << " summary=\"#{summary}\""        if summary
	s << ">\n"
	s
    }
    '
    eval str
    #str
end

def _proc_tdth(classname, tagname)
    str = '
    Proc.new { |attrs, tagtable|
      if attrs then
	s = "  <' + tagname + ' class=\"' + classname + '\""
	s << " colspan=\"#{attrs[\'colspan\']}\"" if attrs[\'colspan\']
	s << " rowspan=\"#{attrs[\'rowspan\']}\"" if attrs[\'rowspan\']
	s << ">"
      else
	s = "  <' + tagname + ' class=\"' + classname + '\">"
      end
      s
    }
    '
    eval str
end

table1	= _proc_table('table1', 'center')
table2	= "</table>\n</div>\n"
tr1	= " <tr class=\"tr1\">\n"
tr2	= " </tr>\n"
th1     = _proc_tdth('th1', 'th')
th2	= "</th>\n"
td1	= _proc_tdth('td1', 'td')
td2	= "</td>\n"
caption1 = " <caption class=\"caption1\">\n"
caption2 = " </caption>\n"
tagtable.regist(Kwaser::Table1,        table1,    table2)
tagtable.regist(Kwaser::TableRow1,     tr1,       tr2)
tagtable.regist(Kwaser::TableHeader1,  th1,       th2)
tagtable.regist(Kwaser::TableData1,    td1,       td2)
tagtable.regist(Kwaser::TableCaption1, caption1,  caption2)

table1	= _proc_table('table2', 'center')
table2	= "</table>\n</div>\n"
tr1	= " <tr class=\"tr2\">\n"
tr2	= " </tr>\n"
th1     = _proc_tdth('th2', 'th')
th2	= "</th>\n"
td1	= _proc_tdth('td2', 'td')
td2	= "</td>\n"
caption1 = " <caption class=\"caption2\">\n"
caption2 = " </caption>\n"
tagtable.regist(Kwaser::Table2,        table1,    table2)
tagtable.regist(Kwaser::TableRow2,     tr1,       tr2)
tagtable.regist(Kwaser::TableHeader2,  th1,       th2)
tagtable.regist(Kwaser::TableData2,    td1,       td2)
tagtable.regist(Kwaser::TableCaption2, caption1,  caption2)

table1	= _proc_table('table3')
table2	= "</table>\n"
tr1	= " <tr class=\"tr3\">\n"
tr2	= " </tr>\n"
th1     = _proc_tdth('th3', 'th')
th2	= "</th>\n"
td1	= _proc_tdth('td3', 'td')
td2	= "</td>\n"
caption1 = " <caption class=\"caption3\">\n"
caption2 = " </caption>\n"
tagtable.regist(Kwaser::Table3,        table1,    table2)
tagtable.regist(Kwaser::TableRow3,     tr1,       tr2)
tagtable.regist(Kwaser::TableHeader3,  th1,       th2)
tagtable.regist(Kwaser::TableData3,    td1,       td2)
tagtable.regist(Kwaser::TableCaption3, caption1,  caption2)


### --------------------
### OrderedList
### --------------------
tagtable.regist(Kwaser::OrderedList1, "<ol type=\"1\">\n", "</ol>\n")
tagtable.regist(Kwaser::OrderedList2, "<ol type=\"A\">\n", "</ol>\n")
tagtable.regist(Kwaser::OrderedList3, "<ol type=\"i\">\n", "</ol>\n")


### --------------------
### UnorderedList
### --------------------
tagtable.regist(Kwaser::UnorderedList1, "<ul type=\"disc\">\n",   "</ul>\n")
tagtable.regist(Kwaser::UnorderedList2, "<ul type=\"circle\">\n", "</ul>\n")
tagtable.regist(Kwaser::UnorderedList3, "<ul type=\"square\">\n", "</ul>\n")


### --------------------
### DefinitionList
### --------------------
def _proc_dl(classname)
    str = '
    Proc.new { |attrs, tagtable|
      if !attrs then
         "<dl class=\"' + classname + '\">\n"
      else
         s = "<dl class=\"' + classname + '\""
         s << " compact" if attrs["type"]
         s << ">\n"
         s
      end
    }'
    eval str
end

tagtable.regist(Kwaser::DefinitionList1,     _proc_dl("dl1"),        "</dl>\n")
tagtable.regist(Kwaser::DefinitionListWord1, "<dt class=\"dt1\">\n", "</dt>\n")
tagtable.regist(Kwaser::DefinitionListDesc1, "<dd class=\"dd1\">\n", "</dd>\n")

tagtable.regist(Kwaser::DefinitionList2,     _proc_dl("dl2"),        "</dl>\n")
tagtable.regist(Kwaser::DefinitionListWord2, "<dt class=\"dt2\">\n", "</dt>\n")
tagtable.regist(Kwaser::DefinitionListDesc2, "<dd class=\"dd2\">\n", "</dd>\n")

tagtable.regist(Kwaser::DefinitionList3,     _proc_dl("dl3"),        "</dl>\n")
tagtable.regist(Kwaser::DefinitionListWord3, "<dt class=\"dt3\"><strong>\n", "</strong></dt>\n")
tagtable.regist(Kwaser::DefinitionListDesc3, "<dd class=\"dd3\">\n", "</dd>\n")


### --------------------
### Footnote
### --------------------
str = <<'END'
<div class="footnote">
 <dl compact>
@@@
  <dt>(<a name=\"fnref:#{count}\" href=\"#fnlink:#{count}\">*#{count}</a>)</dt>
  <dd>@@@</dd>
@@@
 </dl>
</div>
END
strs = str.split(/@@@\n?/)

fnlist_beg		= strs[0]
#fnitem_beg		= strs[1]
fnitem_end		= strs[2]
fnlist_end		= strs[3]

fnitem_beg = Proc.new do |attrs, tagtable|
    count = attrs ? attrs['count'] : ''
    "  <dt>(<a name=\"fnref:#{count}\" href=\"#fnlink:#{count}\">*#{count}</a>)</dt>\n  <dd>"
end

tagtable.regist(Kwaser::FootnoteList, fnlist_beg, fnlist_end)
tagtable.regist(Kwaser::FootnoteItem, fnitem_beg, fnitem_end)


### --------------------
### Notice
### --------------------
begin_tag	= '<span style="color:#FF0000">'
end_tag		= '</span>'
tagtable.regist(Kwaser::Notice, begin_tag, end_tag)


### --------------------
### Table of Contents
### --------------------
#begin_tag = "Table of Contents:\n<div class=\"toc\">\n"
begin_tag = Proc.new do |attrs, tagtable|
    title = (attrs && attrs['arg']) || Kwaser::Context.current.get(:toc_title)
    "#{title}\n<div class=\"toc\">\n"
end
end_tag   = "</div>\n"
tagtable.regist(Kwaser::TocRegion, begin_tag, end_tag)


### --------------------
### Note
### --------------------
begin_tag = <<END
<blockquote>
 <div class="note">
END
end_tag   = <<END
 </div>
</blockquote>
END
tagtable.regist(Kwaser::Note, begin_tag, end_tag)

