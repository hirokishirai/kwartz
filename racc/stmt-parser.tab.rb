#
# DO NOT MODIFY!!!!
# This file is automatically generated by racc 1.4.5
# from racc grammer file "stmt-parser.racc".
#

require 'racc/parser'


module Kwartz

  class StatementParser < Racc::Parser

##### racc 1.4.5 generates ###

racc_reduce_table = [
 0, 0, :racc_error,
 2, 60, :_reduce_1,
 0, 60, :_reduce_2,
 5, 61, :_reduce_3,
 7, 61, :_reduce_4,
 5, 61, :_reduce_5,
 6, 61, :_reduce_6,
 2, 61, :_reduce_7,
 2, 61, :_reduce_8,
 2, 61, :_reduce_9,
 2, 61, :_reduce_10,
 2, 61, :_reduce_11,
 2, 61, :_reduce_12,
 5, 61, :_reduce_13,
 5, 61, :_reduce_14,
 2, 61, :_reduce_15,
 3, 66, :_reduce_16,
 6, 67, :_reduce_17,
 2, 67, :_reduce_18,
 0, 67, :_reduce_19,
 1, 64, :_reduce_none,
 1, 64, :_reduce_21,
 3, 65, :_reduce_22,
 3, 65, :_reduce_23,
 3, 65, :_reduce_24,
 3, 65, :_reduce_25,
 3, 65, :_reduce_26,
 3, 65, :_reduce_27,
 3, 65, :_reduce_28,
 3, 65, :_reduce_29,
 3, 65, :_reduce_30,
 3, 65, :_reduce_31,
 3, 65, :_reduce_32,
 3, 65, :_reduce_33,
 3, 65, :_reduce_34,
 3, 65, :_reduce_35,
 2, 65, :_reduce_36,
 2, 65, :_reduce_37,
 2, 65, :_reduce_38,
 5, 65, :_reduce_39,
 3, 65, :_reduce_40,
 3, 65, :_reduce_41,
 3, 65, :_reduce_42,
 3, 65, :_reduce_43,
 3, 65, :_reduce_44,
 3, 65, :_reduce_45,
 3, 65, :_reduce_46,
 3, 65, :_reduce_47,
 3, 65, :_reduce_48,
 1, 65, :_reduce_49,
 4, 63, :_reduce_50,
 4, 63, :_reduce_51,
 6, 63, :_reduce_52,
 3, 63, :_reduce_53,
 4, 63, :_reduce_54,
 1, 63, :_reduce_55,
 1, 63, :_reduce_56,
 3, 63, :_reduce_57,
 1, 68, :_reduce_58,
 1, 68, :_reduce_59,
 1, 68, :_reduce_60,
 1, 68, :_reduce_61,
 1, 68, :_reduce_62,
 1, 68, :_reduce_63,
 3, 62, :_reduce_64,
 1, 62, :_reduce_65,
 0, 62, :_reduce_66 ]

racc_reduce_n = 67

racc_shift_n = 150

racc_action_table = [
     7,     8,     9,    11,    13,    17,    19,    26,    29,     3,
     5,   124,   132,    10,    12,    15,    18,    22,    25,    28,
     2,   116,   120,   140,    74,   115,   115,   115,    21,    24,
   138,   139,    40,    41,    48,    42,    83,    14,     7,     8,
     9,    11,    13,    17,    19,    40,    41,    47,    42,    40,
    41,    23,    42,   123,     4,   142,     7,     8,     9,    11,
    13,    17,    19,    26,    29,     3,     5,   138,   139,    10,
    12,    15,    18,    22,    25,    28,     2,     7,     8,     9,
    11,    13,    17,    19,    21,    24,   110,    40,    41,    23,
    42,   119,   122,    14,     7,     8,     9,    11,    13,    17,
    19,    40,    41,    44,    42,    21,    24,    23,    62,    64,
    67,    62,    64,    67,    14,     7,     8,     9,    11,    13,
    17,    19,    21,    24,    62,    64,    67,   126,    23,   128,
   128,    14,     7,     8,     9,    11,    13,    17,    19,   112,
    39,    81,    38,    21,    24,    23,   134,    36,    75,    35,
   117,    34,    14,     7,     8,     9,    11,    13,    17,    19,
    21,    24,    33,    32,   143,   128,    23,   128,    31,    14,
     7,     8,     9,    11,    13,    17,    19,    30,   128,    76,
   nil,    21,    24,    23,   nil,   nil,   nil,   nil,   nil,   nil,
    14,     7,     8,     9,    11,    13,    17,    19,   nil,   nil,
   nil,   nil,   nil,   nil,    23,   nil,     7,     8,     9,    11,
    13,    17,    19,   nil,   nil,   nil,   nil,   nil,   nil,    21,
    24,    23,   nil,   nil,   nil,   nil,   nil,   nil,    14,   nil,
   nil,   nil,   nil,   nil,    21,    24,   nil,   nil,   nil,   nil,
   nil,   nil,    23,    14,     7,     8,     9,    11,    13,    17,
    19,   nil,   nil,   nil,   nil,   nil,   nil,    23,     7,     8,
     9,    11,    13,    17,    19,     7,     8,     9,    11,    13,
    17,    19,    21,    24,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    14,     7,     8,     9,    11,    13,    17,    19,   nil,
   nil,   nil,   nil,    21,    24,    23,   nil,   nil,   nil,   nil,
   nil,   nil,    14,   nil,   nil,   nil,   nil,   nil,   nil,    23,
    21,    24,   nil,   nil,   nil,   nil,    23,   nil,   nil,    14,
     7,     8,     9,    11,    13,    17,    19,   nil,   nil,   nil,
   nil,   nil,   nil,    23,   nil,     7,     8,     9,    11,    13,
    17,    19,   nil,   nil,   nil,   nil,   nil,   nil,    21,    24,
     7,     8,     9,    11,    13,    17,    19,    14,   nil,   nil,
   nil,   nil,   nil,    21,    24,   nil,   nil,   nil,   nil,   nil,
   nil,    23,    14,   nil,   nil,   nil,   nil,   nil,    21,    24,
   nil,   nil,   nil,   nil,   nil,   nil,    23,    14,     7,     8,
     9,    11,    13,    17,    19,   nil,   nil,   nil,   nil,   nil,
   nil,    23,   nil,     7,     8,     9,    11,    13,    17,    19,
   nil,   nil,   nil,   nil,   nil,   nil,    21,    24,     7,     8,
     9,    11,    13,    17,    19,    14,   nil,   nil,   nil,   nil,
   nil,    21,    24,   nil,   nil,   nil,   nil,   nil,   nil,    23,
    14,   nil,   nil,   nil,   nil,   nil,    21,    24,   nil,   nil,
   nil,   nil,   nil,   nil,    23,    14,     7,     8,     9,    11,
    13,    17,    19,   nil,   nil,   nil,   nil,   nil,   nil,    23,
   nil,     7,     8,     9,    11,    13,    17,    19,   nil,   nil,
   nil,   nil,   nil,   nil,    21,    24,     7,     8,     9,    11,
    13,    17,    19,    14,   nil,   nil,   nil,   nil,   nil,    21,
    24,   nil,   nil,   nil,   nil,   nil,   nil,    23,    14,   nil,
   nil,   nil,   nil,   nil,    21,    24,   nil,   nil,   nil,   nil,
   nil,   nil,    23,    14,     7,     8,     9,    11,    13,    17,
    19,   nil,   nil,   nil,   nil,   nil,   nil,    23,   nil,     7,
     8,     9,    11,    13,    17,    19,   nil,   nil,   nil,   nil,
   nil,   nil,    21,    24,     7,     8,     9,    11,    13,    17,
    19,    14,   nil,   nil,   nil,   nil,   nil,    21,    24,   nil,
   nil,   nil,   nil,   nil,   nil,    23,    14,   nil,   nil,   nil,
   nil,   nil,    21,    24,   nil,   nil,   nil,   nil,   nil,   nil,
    23,    14,     7,     8,     9,    11,    13,    17,    19,   nil,
   nil,   nil,   nil,   nil,   nil,    23,   nil,     7,     8,     9,
    11,    13,    17,    19,   nil,   nil,   nil,   nil,   nil,   nil,
    21,    24,     7,     8,     9,    11,    13,    17,    19,    14,
   nil,   nil,   nil,   nil,   nil,    21,    24,   nil,   nil,   nil,
   nil,   nil,   nil,    23,    14,   nil,   nil,   nil,   nil,   nil,
    21,    24,   nil,   nil,   nil,   nil,   nil,   nil,    23,    14,
     7,     8,     9,    11,    13,    17,    19,   nil,   nil,   nil,
   nil,   nil,   nil,    23,   nil,     7,     8,     9,    11,    13,
    17,    19,   nil,   nil,   nil,   nil,   nil,   nil,    21,    24,
     7,     8,     9,    11,    13,    17,    19,    14,   nil,   nil,
   nil,   nil,   nil,    21,    24,   nil,   nil,   nil,   nil,   nil,
   nil,    23,    14,   nil,   nil,   nil,   nil,   nil,    21,    24,
   nil,   nil,   nil,   nil,   nil,   nil,    23,    14,     7,     8,
     9,    11,    13,    17,    19,   nil,   nil,   nil,   nil,   nil,
   nil,    23,   nil,     7,     8,     9,    11,    13,    17,    19,
   nil,   nil,   nil,   nil,   nil,   nil,    21,    24,     7,     8,
     9,    11,    13,    17,    19,    14,   nil,   nil,   nil,   nil,
   nil,    21,    24,   nil,   nil,   nil,   nil,   nil,   nil,    23,
    14,   nil,   nil,   nil,   nil,   nil,    21,    24,   nil,   nil,
   nil,   nil,   nil,   nil,    23,    14,     7,     8,     9,    11,
    13,    17,    19,   nil,   nil,   nil,   nil,   nil,   nil,    23,
   nil,     7,     8,     9,    11,    13,    17,    19,   nil,   nil,
   nil,   nil,   nil,   nil,    21,    24,     7,     8,     9,    11,
    13,    17,    19,    14,   nil,   nil,   nil,   nil,   nil,    21,
    24,   nil,   nil,   nil,   nil,   nil,   nil,    23,    14,   nil,
   nil,   nil,   nil,   nil,    21,    24,   nil,   nil,   nil,   nil,
   nil,   nil,    23,    14,     7,     8,     9,    11,    13,    17,
    19,   nil,   nil,   nil,   nil,   nil,   nil,    23,     7,     8,
     9,    11,    13,    17,    19,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    21,    24,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    14,   nil,    62,    64,    67,    70,    72,    73,    50,
    53,    55,    57,    59,    61,    23,    66,    69,    71,   nil,
    49,    52,    54,    56,    58,    60,    63,    65,    68,    23,
   nil,    51,    62,    64,    67,    70,    72,    73,    50,    53,
    55,    57,    59,    61,   nil,    66,    69,    71,   nil,    49,
    52,    54,    56,    58,    60,    63,    65,    68,   118,   147,
    62,    64,    67,    70,    72,    73,    50,    53,    55,    57,
    59,    61,   nil,    66,    69,    71,   nil,    49,    52,    54,
    56,    58,    60,    63,    65,    68,    62,    64,    67,    70,
    72,    73,    50,    53,    55,    57,    59,    61,   nil,    66,
    69,    71,   nil,    49,    52,    54,    56,    58,    60,    63,
    65,    68,   nil,   113,    62,    64,    67,    70,    72,    73,
    50,    53,    55,    57,    59,    61,   nil,    66,    69,    71,
   nil,    49,    52,    54,    56,    58,    60,    63,    65,    68,
   nil,   141,    62,    64,    67,    70,    72,    73,    50,    53,
    55,    57,    59,    61,   nil,    66,    69,    71,   nil,    49,
    52,    54,    56,    58,    60,    63,    65,    68,   nil,    84,
    62,    64,    67,    70,    72,    73,    50,    53,    55,    57,
    59,    61,   nil,    66,    69,    71,   nil,    49,    52,    54,
    56,    58,    60,    63,    65,    68,   nil,   114,    62,    64,
    67,    70,    72,    73,    50,    53,    55,    57,    59,    61,
   nil,    66,    69,    71,   nil,    49,    52,    54,    56,    58,
    60,    63,    65,    68,    62,    64,    67,    70,    72,    73,
    50,    53,    55,    57,    59,    61,   nil,    66,    69,    71,
   nil,    49,    52,    54,    56,    58,    60,    63,    65,    68,
    62,    64,    67,    70,    72,    73,    50,    53,    55,    57,
    59,    61,   nil,    66,    69,    71,   nil,    49,    52,    54,
    56,    58,    60,    63,    65,    68,    62,    64,    67,    70,
    72,    73,    50,    53,    55,    57,    59,    61,   nil,    66,
    69,    71,   121,    49,    52,    54,    56,    58,    60,    63,
    65,    68,    62,    64,    67,    70,    72,    73,    50,    53,
    55,    57,    59,    61,   nil,    66,    69,    71,   nil,    49,
    52,    54,    56,    58,    60,    63,    65,    68,    62,    64,
    67,    70,    72,    73,    50,    53,    55,    57,    59,    61,
   nil,    66,    69,    71,   nil,    49,    52,    54,    56,    58,
    60,    63,    65,    68,    62,    64,    67,    70,    72,    73,
    50,    53,    55,    57,    59,    61,   nil,    66,    69,    71,
   nil,    49,    52,    54,    56,    58,    60,    63,    65,    68,
    62,    64,    67,    70,    72,    73,    50,    53,    55,    57,
    59,    61,   nil,    66,    69,    71,   nil,    49,    52,    54,
    56,    58,    60,    63,    65,    68,    62,    64,    67,    70,
    72,    73,    50,    53,    55,    57,    59,    61,   nil,    66,
    69,    71,   nil,    49,    52,    54,    56,    58,    60,    63,
    65,    68,    62,    64,    67,    70,    72,    73,    50,    53,
    55,    57,    59,    61,   nil,    66,    69,    71,   nil,    49,
    52,    54,    56,    58,    60,    63,    65,    68,    62,    64,
    67,    70,    72,    73,    50,    53,    55,    57,    59,    61,
   nil,    66,    69,    71,   nil,    49,    52,    54,    56,    58,
    60,    63,    65,    68,    62,    64,    67,    70,    72,    73,
    50,    53,    55,    57,    59,    61,   nil,    66,    69,    71,
   nil,    49,    52,    54,    56,    58,    60,    63,    65,    68,
    62,    64,    67,    70,    72,    73,    50,    53,    55,    57,
    59,    61,   nil,    66,    69,    71,    62,    64,    67,    70,
    72,    73,    50,    53,    55,    57,    59,    61,   nil,    66,
    62,    64,    67,    70,    72,    73,   -67,   -67,   -67,   -67,
   -67,   -67,    62,    64,    67,    70,    72,    73,   -67,   -67,
   -67,   -67,   -67,   -67,    62,    64,    67,    70,    72,    73,
    50,    53,    55,    57,    59,    61,    62,    64,    67,    70,
    72,    73,   -67,   -67,   -67,   -67,   -67,   -67,    62,    64,
    67,    70,    72,    73,   -67,   -67,   -67,   -67,   -67,   -67,
    62,    64,    67,    70,    72,    73,   -67,   -67,   -67,   -67,
   -67,   -67,    62,    64,    67,    70,    72,    73,   -67,   -67,
   -67,   -67,   -67,   -67 ]

racc_action_check = [
   136,   136,   136,   136,   136,   136,   136,   136,   136,   136,
   136,   111,   120,   136,   136,   136,   136,   136,   136,   136,
   136,    79,    85,   131,    28,    79,    85,   131,   136,   136,
   148,   148,   111,   111,    26,   111,    42,   136,    75,    75,
    75,    75,    75,    75,    75,    46,    46,    25,    46,    37,
    37,   136,    37,   111,     1,   136,     1,     1,     1,     1,
     1,     1,     1,     1,     1,     1,     1,   129,   129,     1,
     1,     1,     1,     1,     1,     1,     1,    65,    65,    65,
    65,    65,    65,    65,     1,     1,    74,    43,    43,    75,
    43,    83,   110,     1,    73,    73,    73,    73,    73,    73,
    73,    20,    20,    22,    20,    65,    65,     1,   108,   108,
   108,   106,   106,   106,    65,    72,    72,    72,    72,    72,
    72,    72,    73,    73,   109,   109,   109,   112,    65,   113,
   114,    73,    71,    71,    71,    71,    71,    71,    71,    76,
    18,    40,    15,    72,    72,    73,   122,    12,    29,    10,
    81,     7,    72,   125,   125,   125,   125,   125,   125,   125,
    71,    71,     5,     4,   138,   139,    72,   141,     3,    71,
    14,    14,    14,    14,    14,    14,    14,     2,   147,    30,
   nil,   125,   125,    71,   nil,   nil,   nil,   nil,   nil,   nil,
   125,   121,   121,   121,   121,   121,   121,   121,   nil,   nil,
   nil,   nil,   nil,   nil,   125,   nil,   117,   117,   117,   117,
   117,   117,   117,   nil,   nil,   nil,   nil,   nil,   nil,   121,
   121,    14,   nil,   nil,   nil,   nil,   nil,   nil,   121,   nil,
   nil,   nil,   nil,   nil,   117,   117,   nil,   nil,   nil,   nil,
   nil,   nil,   121,   117,   115,   115,   115,   115,   115,   115,
   115,   nil,   nil,   nil,   nil,   nil,   nil,   117,    21,    21,
    21,    21,    21,    21,    21,    70,    70,    70,    70,    70,
    70,    70,   115,   115,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   115,    23,    23,    23,    23,    23,    23,    23,   nil,
   nil,   nil,   nil,    70,    70,   115,   nil,   nil,   nil,   nil,
   nil,   nil,    70,   nil,   nil,   nil,   nil,   nil,   nil,    21,
    23,    23,   nil,   nil,   nil,   nil,    70,   nil,   nil,    23,
    57,    57,    57,    57,    57,    57,    57,   nil,   nil,   nil,
   nil,   nil,   nil,    23,   nil,    69,    69,    69,    69,    69,
    69,    69,   nil,   nil,   nil,   nil,   nil,   nil,    57,    57,
    68,    68,    68,    68,    68,    68,    68,    57,   nil,   nil,
   nil,   nil,   nil,    69,    69,   nil,   nil,   nil,   nil,   nil,
   nil,    57,    69,   nil,   nil,   nil,   nil,   nil,    68,    68,
   nil,   nil,   nil,   nil,   nil,   nil,    69,    68,    67,    67,
    67,    67,    67,    67,    67,   nil,   nil,   nil,   nil,   nil,
   nil,    68,   nil,    66,    66,    66,    66,    66,    66,    66,
   nil,   nil,   nil,   nil,   nil,   nil,    67,    67,   143,   143,
   143,   143,   143,   143,   143,    67,   nil,   nil,   nil,   nil,
   nil,    66,    66,   nil,   nil,   nil,   nil,   nil,   nil,    67,
    66,   nil,   nil,   nil,   nil,   nil,   143,   143,   nil,   nil,
   nil,   nil,   nil,   nil,    66,   143,    64,    64,    64,    64,
    64,    64,    64,   nil,   nil,   nil,   nil,   nil,   nil,   143,
   nil,    31,    31,    31,    31,    31,    31,    31,   nil,   nil,
   nil,   nil,   nil,   nil,    64,    64,    33,    33,    33,    33,
    33,    33,    33,    64,   nil,   nil,   nil,   nil,   nil,    31,
    31,   nil,   nil,   nil,   nil,   nil,   nil,    64,    31,   nil,
   nil,   nil,   nil,   nil,    33,    33,   nil,   nil,   nil,   nil,
   nil,   nil,    31,    33,    34,    34,    34,    34,    34,    34,
    34,   nil,   nil,   nil,   nil,   nil,   nil,    33,   nil,    63,
    63,    63,    63,    63,    63,    63,   nil,   nil,   nil,   nil,
   nil,   nil,    34,    34,    62,    62,    62,    62,    62,    62,
    62,    34,   nil,   nil,   nil,   nil,   nil,    63,    63,   nil,
   nil,   nil,   nil,   nil,   nil,    34,    63,   nil,   nil,   nil,
   nil,   nil,    62,    62,   nil,   nil,   nil,   nil,   nil,   nil,
    63,    62,    41,    41,    41,    41,    41,    41,    41,   nil,
   nil,   nil,   nil,   nil,   nil,    62,   nil,    61,    61,    61,
    61,    61,    61,    61,   nil,   nil,   nil,   nil,   nil,   nil,
    41,    41,    60,    60,    60,    60,    60,    60,    60,    41,
   nil,   nil,   nil,   nil,   nil,    61,    61,   nil,   nil,   nil,
   nil,   nil,   nil,    41,    61,   nil,   nil,   nil,   nil,   nil,
    60,    60,   nil,   nil,   nil,   nil,   nil,   nil,    61,    60,
    59,    59,    59,    59,    59,    59,    59,   nil,   nil,   nil,
   nil,   nil,   nil,    60,   nil,    58,    58,    58,    58,    58,
    58,    58,   nil,   nil,   nil,   nil,   nil,   nil,    59,    59,
    48,    48,    48,    48,    48,    48,    48,    59,   nil,   nil,
   nil,   nil,   nil,    58,    58,   nil,   nil,   nil,   nil,   nil,
   nil,    59,    58,   nil,   nil,   nil,   nil,   nil,    48,    48,
   nil,   nil,   nil,   nil,   nil,   nil,    58,    48,    49,    49,
    49,    49,    49,    49,    49,   nil,   nil,   nil,   nil,   nil,
   nil,    48,   nil,    50,    50,    50,    50,    50,    50,    50,
   nil,   nil,   nil,   nil,   nil,   nil,    49,    49,    52,    52,
    52,    52,    52,    52,    52,    49,   nil,   nil,   nil,   nil,
   nil,    50,    50,   nil,   nil,   nil,   nil,   nil,   nil,    49,
    50,   nil,   nil,   nil,   nil,   nil,    52,    52,   nil,   nil,
   nil,   nil,   nil,   nil,    50,    52,    53,    53,    53,    53,
    53,    53,    53,   nil,   nil,   nil,   nil,   nil,   nil,    52,
   nil,    54,    54,    54,    54,    54,    54,    54,   nil,   nil,
   nil,   nil,   nil,   nil,    53,    53,    55,    55,    55,    55,
    55,    55,    55,    53,   nil,   nil,   nil,   nil,   nil,    54,
    54,   nil,   nil,   nil,   nil,   nil,   nil,    53,    54,   nil,
   nil,   nil,   nil,   nil,    55,    55,   nil,   nil,   nil,   nil,
   nil,   nil,    54,    55,    56,    56,    56,    56,    56,    56,
    56,   nil,   nil,   nil,   nil,   nil,   nil,    55,    24,    24,
    24,    24,    24,    24,    24,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    56,    56,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    56,   nil,    27,    27,    27,    27,    27,    27,    27,
    27,    27,    27,    27,    27,    56,    27,    27,    27,   nil,
    27,    27,    27,    27,    27,    27,    27,    27,    27,    24,
   nil,    27,   146,   146,   146,   146,   146,   146,   146,   146,
   146,   146,   146,   146,   nil,   146,   146,   146,   nil,   146,
   146,   146,   146,   146,   146,   146,   146,   146,    82,   146,
    82,    82,    82,    82,    82,    82,    82,    82,    82,    82,
    82,    82,   nil,    82,    82,    82,   nil,    82,    82,    82,
    82,    82,    82,    82,    82,    82,    77,    77,    77,    77,
    77,    77,    77,    77,    77,    77,    77,    77,   nil,    77,
    77,    77,   nil,    77,    77,    77,    77,    77,    77,    77,
    77,    77,   nil,    77,   135,   135,   135,   135,   135,   135,
   135,   135,   135,   135,   135,   135,   nil,   135,   135,   135,
   nil,   135,   135,   135,   135,   135,   135,   135,   135,   135,
   nil,   135,    45,    45,    45,    45,    45,    45,    45,    45,
    45,    45,    45,    45,   nil,    45,    45,    45,   nil,    45,
    45,    45,    45,    45,    45,    45,    45,    45,   nil,    45,
    78,    78,    78,    78,    78,    78,    78,    78,    78,    78,
    78,    78,   nil,    78,    78,    78,   nil,    78,    78,    78,
    78,    78,    78,    78,    78,    78,   nil,    78,    80,    80,
    80,    80,    80,    80,    80,    80,    80,    80,    80,    80,
   nil,    80,    80,    80,   nil,    80,    80,    80,    80,    80,
    80,    80,    80,    80,   101,   101,   101,   101,   101,   101,
   101,   101,   101,   101,   101,   101,   nil,   101,   101,   101,
   nil,   101,   101,   101,   101,   101,   101,   101,   101,   101,
   104,   104,   104,   104,   104,   104,   104,   104,   104,   104,
   104,   104,   nil,   104,   104,   104,   nil,   104,   104,   104,
   104,   104,   104,   104,   104,   104,   107,   107,   107,   107,
   107,   107,   107,   107,   107,   107,   107,   107,   nil,   107,
   107,   107,   107,   107,   107,   107,   107,   107,   107,   107,
   107,   107,    99,    99,    99,    99,    99,    99,    99,    99,
    99,    99,    99,    99,   nil,    99,    99,    99,   nil,    99,
    99,    99,    99,    99,    99,    99,    99,    99,   130,   130,
   130,   130,   130,   130,   130,   130,   130,   130,   130,   130,
   nil,   130,   130,   130,   nil,   130,   130,   130,   130,   130,
   130,   130,   130,   130,    88,    88,    88,    88,    88,    88,
    88,    88,    88,    88,    88,    88,   nil,    88,    88,    88,
   nil,    88,    88,    88,    88,    88,    88,    88,    88,    88,
    90,    90,    90,    90,    90,    90,    90,    90,    90,    90,
    90,    90,   nil,    90,    90,    90,   nil,    90,    90,    90,
    90,    90,    90,    90,    90,    90,    86,    86,    86,    86,
    86,    86,    86,    86,    86,    86,    86,    86,   nil,    86,
    86,    86,   nil,    86,    86,    86,    86,    86,    86,    86,
    86,    86,    94,    94,    94,    94,    94,    94,    94,    94,
    94,    94,    94,    94,   nil,    94,    94,    94,   nil,    94,
    94,    94,    94,    94,    94,    94,    94,    94,    92,    92,
    92,    92,    92,    92,    92,    92,    92,    92,    92,    92,
   nil,    92,    92,    92,   nil,    92,    92,    92,    92,    92,
    92,    92,    92,    92,    96,    96,    96,    96,    96,    96,
    96,    96,    96,    96,    96,    96,   nil,    96,    96,    96,
   nil,    96,    96,    96,    96,    96,    96,    96,    96,    96,
   133,   133,   133,   133,   133,   133,   133,   133,   133,   133,
   133,   133,   nil,   133,   133,   133,   105,   105,   105,   105,
   105,   105,   105,   105,   105,   105,   105,   105,   nil,   105,
    89,    89,    89,    89,    89,    89,    89,    89,    89,    89,
    89,    89,    95,    95,    95,    95,    95,    95,    95,    95,
    95,    95,    95,    95,   102,   102,   102,   102,   102,   102,
   102,   102,   102,   102,   102,   102,    97,    97,    97,    97,
    97,    97,    97,    97,    97,    97,    97,    97,    93,    93,
    93,    93,    93,    93,    93,    93,    93,    93,    93,    93,
    91,    91,    91,    91,    91,    91,    91,    91,    91,    91,
    91,    91,    87,    87,    87,    87,    87,    87,    87,    87,
    87,    87,    87,    87 ]

racc_action_pointer = [
   nil,    54,   124,   115,   163,   109,   nil,    98,   nil,   nil,
    94,   nil,    92,   nil,   168,    87,   nil,   nil,    85,   nil,
    78,   256,    48,   280,   876,    -8,   -19,   876,   -29,    95,
   177,   469,   nil,   484,   522,   nil,   nil,    26,   nil,   nil,
   139,   590,    34,    64,   nil,  1015,    22,   nil,   688,   726,
   741,   nil,   756,   794,   809,   824,   862,   318,   673,   658,
   620,   605,   552,   537,   454,    75,   401,   386,   348,   333,
   263,   130,   113,    92,    84,    36,    85,   959,  1043,   -33,
  1071,    97,   933,    66,   nil,   -32,  1279,  1485,  1227,  1413,
  1253,  1473,  1331,  1461,  1305,  1425,  1357,  1449,   nil,  1175,
   nil,  1097,  1437,   nil,  1123,  1399,    84,  1149,    81,    97,
    38,     9,    72,    73,    74,   242,   nil,   204,   nil,   nil,
   -43,   189,    91,   nil,   nil,   151,   nil,   nil,   nil,    54,
  1201,   -31,   nil,  1383,   nil,   987,    -2,   nil,   111,   109,
   nil,   111,   nil,   416,   nil,   nil,   905,   122,    17,   nil ]

racc_action_default = [
    -2,   -67,   -67,   -67,   -67,   -67,   -56,   -55,   -58,   -59,
   -67,   -60,   -67,   -61,   -67,   -67,    -1,   -62,   -67,   -63,
   -49,   -67,   -67,   -67,   -67,   -67,   -67,   -67,   -67,   -67,
   -67,   -67,   150,   -67,   -66,    -7,    -8,   -36,    -9,   -11,
   -67,   -67,   -67,   -38,   -10,   -67,   -37,   -12,   -66,   -67,
   -67,   -15,   -67,   -67,   -67,   -67,   -67,   -67,   -67,   -67,
   -67,   -67,   -67,   -67,   -67,   -67,   -67,   -67,   -67,   -67,
   -67,   -67,   -67,   -67,   -67,   -67,   -67,   -67,   -67,   -67,
   -65,   -53,   -67,   -67,   -57,   -67,   -40,   -28,   -41,   -29,
   -42,   -30,   -43,   -31,   -44,   -32,   -45,   -33,   -24,   -46,
   -25,   -47,   -34,   -26,   -48,   -35,   -22,   -67,   -23,   -27,
   -67,   -67,   -67,   -67,   -67,   -67,   -54,   -66,   -50,   -51,
   -67,   -67,   -67,   -20,   -21,   -67,   -14,    -5,    -2,   -19,
   -64,   -67,    -3,   -39,   -13,   -67,   -67,    -6,   -67,   -67,
   -52,   -67,   -16,   -67,   -18,    -4,   -67,   -67,   -19,   -17 ]

racc_goto_table = [
    27,     1,    79,   127,   129,   137,   125,   nil,   nil,   nil,
   nil,   nil,   nil,    37,   nil,   nil,    85,   nil,   nil,   nil,
    43,   nil,    45,    46,   149,   nil,   nil,   nil,   nil,   144,
    77,   145,    78,   nil,   nil,   nil,   nil,   148,   nil,   nil,
    82,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    86,    87,
   nil,    88,    89,    90,    91,    92,    93,    94,    95,    96,
    97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
   107,   108,   109,   nil,   111,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   131,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   130,   nil,   nil,   nil,   nil,   nil,
   133,   nil,   nil,   nil,   135,   nil,   nil,   nil,   nil,   136,
   nil,   nil,   nil,   nil,   nil,    27,   nil,   nil,   nil,   nil,
   nil,   nil,   146 ]

racc_goto_check = [
     6,     1,     3,     7,     7,     8,     5,   nil,   nil,   nil,
   nil,   nil,   nil,     4,   nil,   nil,     3,   nil,   nil,   nil,
     4,   nil,     6,     4,     8,   nil,   nil,   nil,   nil,     7,
     6,     7,     6,   nil,   nil,   nil,   nil,     7,   nil,   nil,
     6,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     6,     6,
   nil,     6,     6,     6,     6,     6,     6,     6,     6,     6,
     6,     6,     6,     6,     6,     6,     6,     6,     6,     6,
     6,     6,     6,   nil,     4,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,     3,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     6,   nil,   nil,   nil,   nil,   nil,
     6,   nil,   nil,   nil,     6,   nil,   nil,   nil,   nil,     1,
   nil,   nil,   nil,   nil,   nil,     6,   nil,   nil,   nil,   nil,
   nil,   nil,     6 ]

racc_goto_pointer = [
   nil,     1,   nil,   -32,    -1,  -105,    -1,  -110,  -124,   nil ]

racc_goto_default = [
   nil,   nil,    16,   nil,    20,   nil,    80,   nil,   nil,     6 ]

racc_token_table = {
 false => 0,
 Object.new => 1,
 :IDENT => 2,
 :STRING => 3,
 :INTEGER => 4,
 :FLOAT => 5,
 :TRUE => 6,
 :FALSE => 7,
 :NULL => 8,
 :PRINT => 9,
 :FOREACH => 10,
 :WHILE => 11,
 :IF => 12,
 :ELSEIF => 13,
 :ELSE => 14,
 :BREAK => 15,
 :CONTINUE => 16,
 :STAG => 17,
 :CONT => 18,
 :ETAG => 19,
 :ELEM => 20,
 :ELEMENT => 21,
 :CONTENT => 22,
 "." => 23,
 "[" => 24,
 "]" => 25,
 "[:" => 26,
 "*" => 27,
 "/" => 28,
 "%" => 29,
 "+" => 30,
 "-" => 31,
 ".+" => 32,
 "==" => 33,
 "!=" => 34,
 "<" => 35,
 "<=" => 36,
 ">" => 37,
 ">=" => 38,
 "!" => 39,
 "&&" => 40,
 "||" => 41,
 "?" => 42,
 ":" => 43,
 "=" => 44,
 "+=" => 45,
 "-=" => 46,
 "*=" => 47,
 "/=" => 48,
 "%=" => 49,
 ".+=" => 50,
 "||=" => 51,
 "&&=" => 52,
 "(" => 53,
 ")" => 54,
 ";" => 55,
 "{" => 56,
 "}" => 57,
 "," => 58 }

racc_use_result_var = true

racc_nt_base = 59

Racc_arg = [
 racc_action_table,
 racc_action_check,
 racc_action_default,
 racc_action_pointer,
 racc_goto_table,
 racc_goto_check,
 racc_goto_default,
 racc_goto_pointer,
 racc_nt_base,
 racc_reduce_table,
 racc_token_table,
 racc_shift_n,
 racc_reduce_n,
 racc_use_result_var ]

Racc_token_to_s_table = [
'$end',
'error',
'IDENT',
'STRING',
'INTEGER',
'FLOAT',
'TRUE',
'FALSE',
'NULL',
'PRINT',
'FOREACH',
'WHILE',
'IF',
'ELSEIF',
'ELSE',
'BREAK',
'CONTINUE',
'STAG',
'CONT',
'ETAG',
'ELEM',
'ELEMENT',
'CONTENT',
'"."',
'"["',
'"]"',
'"[:"',
'"*"',
'"/"',
'"%"',
'"+"',
'"-"',
'".+"',
'"=="',
'"!="',
'"<"',
'"<="',
'">"',
'">="',
'"!"',
'"&&"',
'"||"',
'"?"',
'":"',
'"="',
'"+="',
'"-="',
'"*="',
'"/="',
'"%="',
'".+="',
'"||="',
'"&&="',
'"("',
'")"',
'";"',
'"{"',
'"}"',
'","',
'$start',
'stmts',
'stmt',
'args',
'primary',
'in',
'expr',
'block',
'else_clause',
'literal']

Racc_debug_parser = false

##### racc system variables end #####

 # reduce 0 omitted

module_eval <<'.,.,', 'stmt-parser.racc', 22
  def _reduce_1( val, _values, result )
 result = val[0] << val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'stmt-parser.racc', 23
  def _reduce_2( val, _values, result )
 result = []
   result
  end
.,.,

module_eval <<'.,.,', 'stmt-parser.racc', 26
  def _reduce_3( val, _values, result )
 result = @builder.build_print_stmt(val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'stmt-parser.racc', 28
  def _reduce_4( val, _values, result )
 result = @builder.build_foreach_stmt(val[2], val[4], val[6])
   result
  end
.,.,

module_eval <<'.,.,', 'stmt-parser.racc', 30
  def _reduce_5( val, _values, result )
 result = @builder.build_while_stmt(val[2], val[4])
   result
  end
.,.,

module_eval <<'.,.,', 'stmt-parser.racc', 32
  def _reduce_6( val, _values, result )
 result = @builder.build_if_stmt(val[2], val[4], val[5])
   result
  end
.,.,

module_eval <<'.,.,', 'stmt-parser.racc', 34
  def _reduce_7( val, _values, result )
 result = @builder.build_break_stmt();
   result
  end
.,.,

module_eval <<'.,.,', 'stmt-parser.racc', 36
  def _reduce_8( val, _values, result )
 result = @builder.build_continue_stmt();
   result
  end
.,.,

module_eval <<'.,.,', 'stmt-parser.racc', 38
  def _reduce_9( val, _values, result )
 result = @builder.build_stag_stmt()
   result
  end
.,.,

module_eval <<'.,.,', 'stmt-parser.racc', 40
  def _reduce_10( val, _values, result )
 result = @builder.build_etag_stmt()
   result
  end
.,.,

module_eval <<'.,.,', 'stmt-parser.racc', 42
  def _reduce_11( val, _values, result )
 result = @builder.build_cont_stmt()
   result
  end
.,.,

module_eval <<'.,.,', 'stmt-parser.racc', 44
  def _reduce_12( val, _values, result )
 result = @builder.build_elem_stmt()
   result
  end
.,.,

module_eval <<'.,.,', 'stmt-parser.racc', 46
  def _reduce_13( val, _values, result )
 result = @builder.build_element_stmt(val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'stmt-parser.racc', 48
  def _reduce_14( val, _values, result )
 result = @builder.build_content_stmt(val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'stmt-parser.racc', 50
  def _reduce_15( val, _values, result )
 result = @builder.build_expression_stmt(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'stmt-parser.racc', 55
  def _reduce_16( val, _values, result )
		    result = @builder.build_block_stmt(val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'stmt-parser.racc', 57
  def _reduce_17( val, _values, result )
 result = @builder.build_if_stmt(val[2], val[4], val[5])
   result
  end
.,.,

module_eval <<'.,.,', 'stmt-parser.racc', 59
  def _reduce_18( val, _values, result )
 result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'stmt-parser.racc', 61
  def _reduce_19( val, _values, result )
 result = nil
   result
  end
.,.,

 # reduce 20 omitted

module_eval <<'.,.,', 'stmt-parser.racc', 64
  def _reduce_21( val, _values, result )
 raise SyntaxError.new("#{@token_val}: '=' or 'in' expected.") if @token_val != 'in'
   result
  end
.,.,

module_eval <<'.,.,', 'stmt-parser.racc', 67
  def _reduce_22( val, _values, result )
 result = @builder.build_arithmetic_expr(:'+', val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'stmt-parser.racc', 68
  def _reduce_23( val, _values, result )
 result = @builder.build_arithmetic_expr(:'-', val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'stmt-parser.racc', 69
  def _reduce_24( val, _values, result )
 result = @builder.build_arithmetic_expr(:'*', val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'stmt-parser.racc', 70
  def _reduce_25( val, _values, result )
 result = @builder.build_arithmetic_expr(:'/', val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'stmt-parser.racc', 71
  def _reduce_26( val, _values, result )
 result = @builder.build_arithmetic_expr(:'%', val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'stmt-parser.racc', 72
  def _reduce_27( val, _values, result )
 result = @builder.build_arithmetic_expr(:'.+', val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'stmt-parser.racc', 74
  def _reduce_28( val, _values, result )
 result = @builder.build_relational_expr(:'==', val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'stmt-parser.racc', 75
  def _reduce_29( val, _values, result )
 result = @builder.build_relational_expr(:'!=', val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'stmt-parser.racc', 76
  def _reduce_30( val, _values, result )
 result = @builder.build_relational_expr(:'<',  val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'stmt-parser.racc', 77
  def _reduce_31( val, _values, result )
 result = @builder.build_relational_expr(:'<=', val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'stmt-parser.racc', 78
  def _reduce_32( val, _values, result )
 result = @builder.build_relational_expr(:'>',  val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'stmt-parser.racc', 79
  def _reduce_33( val, _values, result )
 result = @builder.build_relational_expr(:'>=', val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'stmt-parser.racc', 81
  def _reduce_34( val, _values, result )
 result = @builder.build_relational_expr(:'&&', val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'stmt-parser.racc', 82
  def _reduce_35( val, _values, result )
 result = @builder.build_relational_expr(:'||', val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'stmt-parser.racc', 83
  def _reduce_36( val, _values, result )
 result = @builder.build_relational_expr(:'!',  val[1], nil)
   result
  end
.,.,

module_eval <<'.,.,', 'stmt-parser.racc', 85
  def _reduce_37( val, _values, result )
 result = @builder.build_arithmetic_expr(:'-.', val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'stmt-parser.racc', 86
  def _reduce_38( val, _values, result )
 result = @builder.build_arithmetic_expr(:'+.', val[1])
   result
  end
.,.,

module_eval <<'.,.,', 'stmt-parser.racc', 88
  def _reduce_39( val, _values, result )
 result = @builder.build_conditional_expr(val[0], val[2], val[4])
   result
  end
.,.,

module_eval <<'.,.,', 'stmt-parser.racc', 90
  def _reduce_40( val, _values, result )
 result = @builder.build_assignment_expr(:'=',   val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'stmt-parser.racc', 91
  def _reduce_41( val, _values, result )
 result = @builder.build_assignment_expr(:'+=',  val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'stmt-parser.racc', 92
  def _reduce_42( val, _values, result )
 result = @builder.build_assignment_expr(:'-=',  val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'stmt-parser.racc', 93
  def _reduce_43( val, _values, result )
 result = @builder.build_assignment_expr(:'*=',  val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'stmt-parser.racc', 94
  def _reduce_44( val, _values, result )
 result = @builder.build_assignment_expr(:'/=',  val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'stmt-parser.racc', 95
  def _reduce_45( val, _values, result )
 result = @builder.build_assignment_expr(:'%=',  val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'stmt-parser.racc', 96
  def _reduce_46( val, _values, result )
 result = @builder.build_assignment_expr(:'.+=', val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'stmt-parser.racc', 97
  def _reduce_47( val, _values, result )
 result = @builder.build_assignment_expr(:'||=', val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'stmt-parser.racc', 98
  def _reduce_48( val, _values, result )
 result = @builder.build_assignment_expr(:'&&=', val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'stmt-parser.racc', 100
  def _reduce_49( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'stmt-parser.racc', 102
  def _reduce_50( val, _values, result )
 result = @builder.build_index_expr(:'[]', val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'stmt-parser.racc', 103
  def _reduce_51( val, _values, result )
 result = @builder.build_index2_expr(:'[:]', val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'stmt-parser.racc', 104
  def _reduce_52( val, _values, result )
 result = @builder.build_method_expr(val[0], val[2], val[4])
   result
  end
.,.,

module_eval <<'.,.,', 'stmt-parser.racc', 105
  def _reduce_53( val, _values, result )
 result = @builder.build_property_expr(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'stmt-parser.racc', 106
  def _reduce_54( val, _values, result )
 result = @builder.build_funcall_expr(val[0], val[2])
   result
  end
.,.,

module_eval <<'.,.,', 'stmt-parser.racc', 107
  def _reduce_55( val, _values, result )
 result = @builder.build_variable_literal(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'stmt-parser.racc', 108
  def _reduce_56( val, _values, result )
 result = val[0]
   result
  end
.,.,

module_eval <<'.,.,', 'stmt-parser.racc', 109
  def _reduce_57( val, _values, result )
 result = val[1]
   result
  end
.,.,

module_eval <<'.,.,', 'stmt-parser.racc', 111
  def _reduce_58( val, _values, result )
 result = @builder.build_string_literal(val[0])
   result
  end
.,.,

module_eval <<'.,.,', 'stmt-parser.racc', 112
  def _reduce_59( val, _values, result )
 result = @builder.build_integer_literal(val[0].to_i)
   result
  end
.,.,

module_eval <<'.,.,', 'stmt-parser.racc', 113
  def _reduce_60( val, _values, result )
 result = @builder.build_float_literal(val[0].to_f)
   result
  end
.,.,

module_eval <<'.,.,', 'stmt-parser.racc', 114
  def _reduce_61( val, _values, result )
 result = @builder.build_true_literal(true)
   result
  end
.,.,

module_eval <<'.,.,', 'stmt-parser.racc', 115
  def _reduce_62( val, _values, result )
 result = @builder.build_false_literal(false)
   result
  end
.,.,

module_eval <<'.,.,', 'stmt-parser.racc', 116
  def _reduce_63( val, _values, result )
 result = @builder.build_null_literal(nil)
   result
  end
.,.,

module_eval <<'.,.,', 'stmt-parser.racc', 118
  def _reduce_64( val, _values, result )
 result = val[0] << val[2]
   result
  end
.,.,

module_eval <<'.,.,', 'stmt-parser.racc', 119
  def _reduce_65( val, _values, result )
 result = [ val[0] ]
   result
  end
.,.,

module_eval <<'.,.,', 'stmt-parser.racc', 120
  def _reduce_66( val, _values, result )
 result = []
   result
  end
.,.,

 def _reduce_none( val, _values, result )
  result
 end

  end   # class StatementParser

end   # module Kwartz
