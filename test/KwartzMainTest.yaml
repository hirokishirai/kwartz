pdata: |
      <html>
       <body>
        <h1 id="doctitle">hoge</h1>
        <table id="content">
         <tr id="mark:list">
          <td id="mark:item">item</td>
         </tr>
        </table>
       </body>
      </html>

plogic*:
  eruby: &plogic_ruby |
      #doctitle {
        value: @title;
        remove: "id";
      }
      #list {
        logic: {
          for item in @list
            _elem
          end
        }
      }
      #item {
        Value: item;
      }

  ruby: *plogic_ruby
 
  php: |
      #doctitle {
        value: $title;
        remove: "id";
      }
      #list {
        logic: {
          foreach ($list as $item) {
            _elem();
          }
        }
      }
      #item {
        Value: $item;
      }

expected*:
  eruby: |
      <html>
       <body>
        <h1><%= @title %></h1>
        <table id="content">
      <%     for item in @list %>
         <tr>
          <td><%=h item %></td>
         </tr>
      <%     end %>
        </table>
       </body>
      </html>

  ruby: |
      _buf = ""; _buf << "<html>
       <body>
        <h1>"; _buf << (@title).to_s; _buf << "</h1>
        <table id=\"content\">\n";
          for item in @list
      _buf << "   <tr>
          <td>"; _buf << ERB::Util.h(item); _buf << "</td>
         </tr>\n";
          end
      _buf << "  </table>
       </body>
      </html>\n";
      ; _buf

  php: |
      <html>
       <body>
        <h1><?php echo $title; ?></h1>
        <table id="content">
      <?php     foreach ($list as $item) { ?>
         <tr>
          <td><?php echo htmlspecialchars($item); ?></td>
         </tr>
      <?php     } ?>
        </table>
       </body>
      </html>

notext*:
  eruby: |4+
      
     
            <%= @title %>
      
      <%     for item in @list %>
      
              <%=h item %>
      
      <%     end %>
      
      
      
  ruby: |
      _buf = ""; 
      
            _buf << (@title).to_s; 
      
          for item in @list
      
              _buf << ERB::Util.h(item); 
      
          end
      
      
      
      ; _buf

import_pdata: |
      <div>
      <span id="mark:sectitle">foo</span>
      </div>

import_plogic*:
  eruby: |
      #sectitle{
        elem: sectitle;
      }
  php: |
      #sectitle{
        elem: $sectitle;
      }

layout: |
      <?xml version="1.0" charset="utf8"?>
      <html>
       <head>
        <title id="replace_content_with_content:doctitle">layout file</title>
       </head>
       <body>
      
        <div id="replace_element_with_element:content">
          foo
          bar
        </div>
      
       </body>
      </html>

yamldata: |
      title:	kwartz example
      list:
      	- <aaa>
      	- b&b
      	- '"ccc"'

yamloutput: |
      <html>
       <body>
        <h1>kwartz example</h1>
        <table id="content">
         <tr>
          <td>&lt;aaa&gt;</td>
         </tr>
         <tr>
          <td>b&amp;b</td>
         </tr>
         <tr>
          <td>&quot;ccc&quot;</td>
         </tr>
        </table>
       </body>
      </html>

defun*:
  eruby: |
        module View
        
          (@@proc_table ||= {})['defun1'] = proc do
        _erbout = ''; _erbout.concat "<html>\n"
        _erbout.concat " <body>\n"
        _erbout.concat "  <h1>"; _erbout.concat(( @title ).to_s); _erbout.concat "</h1>\n"
        _erbout.concat "  <table id=\"content\">\n"
             for item in @list 
        _erbout.concat "   <tr>\n"
        _erbout.concat "    <td>"; _erbout.concat((h item ).to_s); _erbout.concat "</td>\n"
        _erbout.concat "   </tr>\n"
             end 
        _erbout.concat "  </table>\n"
        _erbout.concat " </body>\n"
        _erbout.concat "</html>\n"
        _erbout
          end#proc

          module_function
          def expand_defun1(context={})
            if context.is_a?(Hash)
              hash = context
              context = Object.new
              hash.each { |key, val| context.instance_variable_set("@#{key}", val) }
            end
            proc_obj = @@proc_table['defun1']
            context.instance_eval(&proc_obj)
          end

        end

  php: |
        <?php
        function print_view_defun2($context) {
            explode($context);
        ?><html>
         <body>
          <h1><?php echo $title; ?></h1>
          <table id="content">
        <?php     foreach ($list as $item) { ?>
           <tr>
            <td><?php echo htmlspecialchars($item); ?></td>
           </tr>
        <?php     } ?>
          </table>
         </body>
        </html>
        <?php
        }
        function expand_view_defun2($context) {
            ob_start();
            print_view_defun2($context);
            $output = ob_get_clean();
            ob_end_clean();
            return $output;
        }
        ?>
