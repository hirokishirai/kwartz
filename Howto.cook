/*
 *  release number
 */
release = '0.3.0';



/* ------------------------------------------------------------ */

/*
 *  default target
 */
help:
{
	[print '  Help:'];
	[print '     cook help'];
	[print '     cook all'];
	[print '     cook clean'];
	[print '     cook exam'];
	[print '     cook users-guide.{en,ja}.01.html'];
	[print '     cook reference.{en,ja}.01.html'];
	[print '     cook index.html'];
	[print '     cook kuwata-lab'];
	[print '     cook package.xml'];
	[print '  -------------------------------------'];
	[print '  Notice:']
	[print '     * type \'. .bashrc.local\' for setting environment variables'];
	/*
	[print '     * add '.' to your $PATH for output.php and m18n.rb'];
	[print '     * add path to "kuwata-lab.ktag" to your $KWASER_PATH'];
	*/
	
}



/*
 *  all target
 */
all: tgz;



/*
 *  ex.
 *    [generate 'users-guide' 'en' 'kuwata-lab' '-s -b -n' true ];
 */
function generate =
{
	local basename = [@1];
	local lang     = [@2];
	local tagfile  = [@3];
	local kwartz_opts   = [@4];
	local flag_separate = [@5];
	
	if [matches [lang] 'ja'] then
		tagfile = [tagfile]',euc';
	ruby m18n.rb -l [upcase [lang]] [basename].txt > [basename].[lang].txt;
	mkdir -p guide.d;
	rm -rf 'guide.d/*';
	retrieve -d guide.d [basename].[lang].txt;
	/* -b: .profile and breadcrumbs, -s: separate, -n: number */
	kwaser -t [tagfile] [kwartz_opts] -T [basename].[lang].txt > [basename].[lang].toc.html;
	/* if [matches -s% [kwartz_opts]] then */
	if [flag_separate] then
		kwaser -t [tagfile] [kwartz_opts]    [basename].[lang].txt;
	else
		kwaser -t [tagfile] [kwartz_opts]    [basename].[lang].txt > [basename].[lang].html;
	rm [basename].[lang].toc.html;
}


/*
 *  documents
 */

users-guide.%.01.html:  users-guide.txt
{
	local lang = %;
	[generate 'users-guide' [lang] 'kuwata-lab' '-bsn' true];
	mv guide.d/design.html guide.d/design.css .;
}

reference.%.01.html: reference.txt
{
	local lang = %;
	[generate 'reference' [lang] 'kuwata-lab' '-bsn' true];
}

users-guide.%.html:  users-guide.txt
{
	local lang = %;
	[generate 'users-guide' [lang] 'html-css' ''];
	mv guide.d/design.html guide.d/design.css .;
}

reference.%.html: reference.txt
{
	local lang = %;
	[generate 'reference' [lang] 'html-css' ''];
}

README.ja.txt README.en.txt: README.txt
{
	ruby m18n.rb -l EN README.txt > README.en.txt;
	ruby m18n.rb -l JA README.txt > README.ja.txt;
}


/*
 *  recipes for kuwata-lab.com
 */

klab_products = index.html README.en.html README.ja.html ChangeLog.html
                users-guide.en.01.html users-guide.ja.01.html
                reference.en.01.html reference.ja.01.html;
kuwata-lab: [klab_products];

index.html:	index.txt
{
	kwaser -t kuwata-lab -b [need] > [target];
}

%.en.html: %.en.txt
{
	kwaser -t kuwata-lab -b [need] > [target];
}

%.ja.html: %.ja.txt
{
	kwaser -t kuwata-lab,euc -b [need] > [target];
}

ChangeLog.html: ChangeLog
{
	kwaser -t kuwata-lab -b [need] > [target];
}





/*
 *examples.%.html: examples.txt
 *{
 *	local lang = %;
 *	[generate 'examples' [lang] 'html-css' ''];
 *	kwartz-php -l php -p guide.d/calendar-month.plogic guide.d/calendar-month.html > guide.d/calendar-month.view ;
 *	kwartz-php -l php -p guide.d/calendar-page.plogic  guide.d/calendar-page.html  > guide.d/calendar-page.view ;
 *	php -q -d 'include_path=guide.d' guide.d/calendar.php > calendar.html ;
 *}
 */


/*
 *  examples
 */

examples = [glob 'examples/[a-z]*'];

exam:
{
	loop d = [examples]
	{
		cd [d] \; make;
	}
}


/*
 *  clean
 */
clean:
{
	rm -rf	users-guide.*.txt users-guide.*.html
		reference.*.txt   reference.*.html
		examples.*.txt 	  examples.*.html
		README.*.txt
		design.css design.html
		calendar.html
		guide.d
		package.view package.xml
		[klab_products]
		Howto.list
		;
	loop d = [examples]
	{
		cd [d] \; make clean;
	}
}


/*
 *  package.xml
 */
package.xml:  package.php package.view
{
	php -q package.php > package.xml;
}

package.view: package.pdata package.plogic
{
	kwartz-php -p package.plogic package.pdata > package.view;
}
 



/*
 *  archive
 */
/*date = '2004-09-15';*/
/*mydir = 'kwartz-php_'[date];*/
mydir = KwartzPHP-[release];

manuals = users-guide.en.html users-guide.ja.html reference.en.html reference.ja.html;
texts   = README.en.txt README.ja.txt COPYING ChangeLog;

tgz: [manuals] [texts] package.php package.view
{
	rm -rf [mydir];
	mkdir [mydir];

	mkdir -p [mydir]/Kwartz;
	cp -a Kwartz.php [mydir];
	cp -a Kwartz/'*'.php [mydir]/Kwartz;

	cp -a kwartz-php mkmethod-php [mydir];

	mkdir [mydir]/doc;
	cp -a [manuals] [mydir]/doc;
	cp -a design.html design.css html-css.css [mydir]/doc;

	cp -a examples [mydir];

	cp -a test [mydir];

	cp -a [texts] [mydir];

	find [mydir] -name '.svn' | xargs rm -rf;

	find [mydir] -type f | xargs chmod -R 644;
	chmod 755 [mydir]/kwartz-php [mydir]/mkmethod-php;

	php -q package.php > package.xml;

	tar czf [mydir].tgz package.xml [mydir];
}
