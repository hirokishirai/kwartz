
/*
 *  variables
 */
tagfile = 'html-css';



/*
 * default target
 */
all: tgz;



/*
 *  documents
 */
users-guide.%.html:  users-guide.txt
{
	if [matches % 'ja'] then
		tagfile = [tagfile]',euc';
	ruby m18n.rb -l [upcase %] users-guide.txt > users-guide.%.txt;
	mkdir -p guide.d;
	rm -rf 'guide.d/*';
	retrieve -d guide.d users-guide.%.txt;
	kwaser -t [tagfile] -T users-guide.%.txt > users-guide.%.toc.html;
	kwaser -t [tagfile]    users-guide.%.txt > users-guide.%.html;
	rm users-guide.%.toc.html;
	mv guide.d/design.html guide.d/design.css .;
}

reference.%.html: reference.txt
{
	if [matches % 'ja'] then
		tagfile = [tagfile]',euc';
	ruby m18n.rb -l [upcase %] reference.txt > reference.%.txt;
	mkdir -p guide.d;
	rm -rf 'guide.d/*';
	retrieve -d guide.d reference.%.txt;
	kwaser -t [tagfile] -T reference.%.txt > reference.%.toc.html;
	kwaser -t [tagfile]    reference.%.txt > reference.%.html;
	rm reference.%.toc.html;
}


gdir = 'guide.d';

examples.%.html: examples.txt
{
	if [matches % 'ja'] then
		tagfile = [tagfile]',euc';
	ruby m18n.rb -l [upcase %] examples.txt > examples.%.txt;
	mkdir -p [gdir];
	rm -rf [gdir]/'*';
	retrieve -d [gdir] examples.%.txt;
	kwaser -t [tagfile] -T examples.%.txt > examples.%.toc.html;
	kwaser -t [tagfile]    examples.%.txt > examples.%.html;
	rm examples.%.toc.html;

	kwartz-php -l php -p [gdir]/calendar-month.plogic [gdir]/calendar-month.html > [gdir]/calendar-month.view ;
	kwartz-php -l php -p [gdir]/calendar-page.plogic  [gdir]/calendar-page.html  > [gdir]/calendar-page.view ;
	php -q -d 'include_path='[gdir] [gdir]/calendar.php > calendar.html ;
}


/*
 *  Other documents
 */
README.ja.txt README.en.txt: README.txt
{
	ruby m18n.rb -l EN README.txt > README.en.txt;
	ruby m18n.rb -l JA README.txt > README.ja.txt;
}


/*
 *  clean
 */
clean:
{
	rm -f	users-guide.*.txt  users-guide.*.html
		reference.*.txt reference.*.html
		examples.*.txt  examples.*.html
		calendar.html guide.d/'*'
		README.*.txt
		package.view
		;

	cd examples/border1 \;     make clean ;
	cd examples/border2 \;     make clean ;
	cd examples/border3 \;     make clean ;
	cd examples/breadcrumbs \; make clean ;
	cd examples/calendar \;    make clean ;
	cd examples/form1 \;       make clean ;
	cd examples/thumbnail \;   make clean ;

}


/*
 *  package.xml
 */
package.xml:  package.php package.view
{
	php -q package.php > package.xml;
}

package.view: package.pdata package.plogic
{
	kwartz-php -p package.plogic package.pdata > package.view;
}
 


/*
 *  
 */

examples = 
	examples/border1
	examples/border2
	examples/border3
	examples/breadcrumbs
	examples/calendar
	examples/form1
	examples/thumbnail
	;


exam:
{
	cd examples/border1 \;     make clean ;
	cd examples/border2 \;     make clean ;
	cd examples/border3 \;     make clean ;
	cd examples/breadcrumbs \; make clean ;
	cd examples/calendar \;    make clean ;
	cd examples/form1 \;       make clean ;
	cd examples/thumbnail \;   make clean ;
}



/*
 *  archive
 */
/*date = '2004-09-15';*/
/*mydir = 'kwartz-php_'[date];*/
mydir = KwartzPHP-0.1.0;

manuals = users-guide.en.html users-guide.ja.html reference.en.html reference.ja.html;
texts   = README.en.txt README.ja.txt COPYING ChangeLog;

tgz: [manuals] [texts] package.php package.view
{
	rm -rf [mydir];
	mkdir [mydir];

	mkdir -p [mydir]/Kwartz;
	cp Kwartz.php [mydir];
	cp Kwartz/'*'.php [mydir]/Kwartz;

	cp kwartz-php [mydir];

	mkdir [mydir]/doc;
	cp [manuals] [mydir]/doc;
	cp design.html design.css html-css.css [mydir]/doc;

	cp -a examples [mydir];

	cp -a test [mydir];
	rm -rf [mydir]/.svn;

	cp [texts] [mydir];

	find [mydir] -type f | xargs chmod -R 644;
	chmod 755 [mydir]/kwartz-php;
	
	php -q package.php > package.xml;

	tar czf [mydir].tgz package.xml [mydir];
}
